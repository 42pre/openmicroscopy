<?xml version="1.0" encoding="UTF-8"?>
<chapter id="test">
  <title>Testing</title>
    <para>
      or <emphasis>"Dependency injection, getConfigLocations, integration,
      oh my."</emphasis>
    </para>
    <section id="test-unit">
      <title>Unit Testing</title>
      <para>
	The unit testing framework is fairly simple.  Only methods which contain logic written within the OME Java Server are tested.  This means that framework functionality like remoting is <emphasis>not</emphasis> tested.  Neither is DAO functionality; this is a part of integration testing. (see below)
      </para>
      <para>
	Therefore, most of the code which is unit tested lies in the logic packages of the server component.  This is done using <ulink url="http://jmock.org">jMock</ulink>.
      </para>
      <para>
	You can run the unit tests for any component from its directory by entering:
      </para>
      <programlisting>
	maven test -Dmaven.test.mode=unit

	# or if you haven't changed the value of maven.test.mode simply:
	maven test
      </programlisting>
      <para>
	The same can be done for all components using:
      </para>
      <programlisting>
	maven test-all
      </programlisting>
      <para>
	from the top-level directory.
      </para>
    </section>
    <section id="test-integration">
      <title>Integration Testing</title>
      <para>
	Integration testing is a bit more complex.
      </para>
      <para>
	Because of there reliance on a database (which is not easily mockable), all DAO classes are tested in integration mode. 
      </para>
      <para>
	To run integration tests, use <literal>-Dmaven.test.mode=integration</literal> while calling the <literal>test</literal> and <literal>test-all</literal> maven targets mentioned under Unit Testing.
      </para>
      <section id="test-int-db">
	<title>DbUnit Testing</title>
	<para>
	  Several special integration tests, based on the <ulink url="http://dbunit.sourceforge.net/">DbUnit</ulink> JUnit extension, are also included in the integration tests. This currently requires the creation of a special DB (specifically <literal>"[your standard DB url]-test"</literal>).
	</para>
	<para>
	  Currently, these tests will fail. Documentation on preparing these tests will be added later. 
	</para>
      </section>
    </section>    
</chapter>
