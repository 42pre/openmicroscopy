<?xml version="1.0" encoding="utf-8"?>
<project name="main" default="usage" basedir=".">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# Copyright (C) 2005 Open Microscopy Environment
#       Massachusetts Institue of Technology,
#       National Institutes of Health,
#       University of Dundee
#
#
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation; either
#    version 2.1 of the License, or (at your option) any later
#    version.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free
#    Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
#    02111-1307  USA
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
  DOCUMENTATION:
  =================================================

  To use this script you need only have downloaded
  the source code (either from subversion or as
  distribution). The build system can be used by 
  calling:

    java omero <arguments>

  from within the OMERO_HOME directory (this is 
  what you checked out of subversion and where this
  file is located).

-->

	<import file="components/antlib/resources/global.xml"/>

	<target name="usage"
		description="Usage information">
		<concat>
			<filelist dir="${import.dir}" files="usage-ant.txt"/>
		</concat>
	</target>

	<!-- 	===============================================
		BUILD
	==================================================  -->
	<target name="fullbuild" depends="check-system,clean,build,reload-db"
		description="Extensive build which checks and cleans the build environment, builds, and setups the database"/>

	<target name="build" depends="dsl,model,install"
		description="A simple build that will install all artifacts to ${omero.repo.local}"/>

	<!-- Special Components -->
	<property name="defaultTarget" value="install"/>

	<target name="dsl" depends="check-system" unless="generate.skip">
		<antRun component="dsl">
			<target name="${defaultTarget}"/>
		</antRun>
	</target>

	<target name="model" depends="check-system,dsl" unless="generate.skip">
		<antRun component="common">
			<target name="clean"/>
			<target name="install"/>
		</antRun>
	</target>

	<target name="reload-db">
		<antRun component="common">
			<target name="reload-db"/>
		</antRun>
	</target>

	<target name="build-client" depends="check-system,model">
		<antRun component="common"><target name="install"/></antRun>
		<antRun component="client"><target name="install"/></antRun>
		<antRun component="shoola-adapter"><target name="install"/></antRun>
	</target>

	<target name="build-server" depends="check-system,model">
		<antRun component="common"><target name="install"/></antRun>
		<antRun component="omeio-nio"><target name="install"/></antRun>
		<antRun component="rendering"><target name="install"/></antRun>
		<antRun component="server"><target name="install"/></antRun>
	</target>

	<target name="deploy" depends="check-system,build-server">
		<antRun component="omero-ejb"><target name="install"/></antRun>
		<antRun component="omero-app">
			<target name="package"/>
			<target name="deploy-ear-jboss"/>
		</antRun>
	</target>

	<target name="fulldeploy" depends="check-system,build-server,deploy"/>

	<!-- Multiproject:
	  The idea for these targets is taken from maven2 and is
	  supported by the antlib/resources/lifecycle.xml ant script.
	 -->
	<target name="multiproject" depends="variables-define"/>

	<target name="multi" depends="multiproject"
		description="Convenience target. Iterates over all components calling the $${defaultTarget} method (default=${defaultTarget}">
		<iterate target="${defaultTarget}"/>
	</target>

	<target name="prepare" depends="multiproject"
		description="Lifecycle target: calls 'prepare' on all components">
		<iterate target="prepare"/>
	</target>

	<target name="generate" depends="multiproject"
		description="Lifecycle target: calls 'generate' on all components">
		<iterate target="generate"/>
	</target>

	<target name="compile" depends="multiproject"
		description="Lifecycle target: calls 'compile' on all components">
		<iterate target="compile"/>
	</target>

	<target name="test" depends="multiproject"
		description="Lifecycle target: calls 'test' on all components">
		<iterate target="test"/>
	</target>

	<target name="package" depends="multiproject"
		description="Lifecycle target: calls 'package' on all components">
		<iterate target="package"/>
	</target>

	<target name="install" depends="multiproject"
		description="Lifecycle target: calls 'install' on all components">
		<iterate target="install"/>
	</target>

	<target name="integration" depends="multiproject"
		description="Lifecycle target: calls 'integration' on all components">
		<iterate target="integration"/>
	</target>

	<target name="clean" depends="multiproject"
		description="Lifecycle target: calls 'clean' on all components">
		<delete dir="${dist.dir}"/>
		<iterate target="clean"/>
	</target>

	<target name="dist" depends="multiproject"
		description="Lifecycle target: calls 'dist' on all components">
		<mkdir dir="${dist.dir}"/>
		<iterate target="dist"/>
	</target>

	<!-- 	===============================================
		Javadoc
	==================================================  -->
	<target name="javadoc">

	    <patternset id="all.java.files">
		<include name="src/**/*.java"/>
		<include name="target/generated/src/**/*.java"/>
		<exclude name="xxx/**"/>
	    </patternset>

	    <javadoc
		destdir="dist/docs/api"
		author="true"
		version="true"
		use="true"
		windowtitle="OMERO (OME Remote Objects) Server">

		<classpath>
			<fileset dir="lib">
				<include name="**/*.jar"/>
			</fileset>
		</classpath>

		<fileset dir="components/common/" defaultexcludes="yes">
			<patternset refid="all.java.files"/>
		</fileset>
		<fileset dir="components/server/" defaultexcludes="yes">
			<patternset refid="all.java.files"/>
		</fileset>
		<fileset dir="components/omeio-nio/" defaultexcludes="yes">
			<patternset refid="all.java.files"/>
		</fileset>
		<fileset dir="components/rendering/" defaultexcludes="yes">
			<patternset refid="all.java.files"/>
		</fileset>
		<fileset dir="components/client/" defaultexcludes="yes">
			<patternset refid="all.java.files"/>
		</fileset>
		<fileset dir="components/shoola-adapter/" defaultexcludes="yes">
			<patternset refid="all.java.files"/>
		</fileset>

		<doctitle><![CDATA[<h1> Omero API </h1>]]></doctitle>
		<bottom><![CDATA[
		<p><b><i>Copyright &#169; 2005 Open Microscopy Environment. All Rights Reserved.</i></b></p>
		<p>Massachusetts Institute of Technology,</p>
		<p>National Institutes of Health,</p>
		<p>University of Dundee</p>
		]]></bottom>

		<tag name="DEV.TODO" scope="all" description="To do:"/>

		<group title="Common Packages" 
			packages="ome.api:ome.conditions*:ome.util*:ome.testing*"/>
		<group title="Server Packages" 
			packages="ome.dynamic:ome.services*:ome.logic*:ome.tools*:ome.security*:ome.io*:ome.rules*:omeis*:ome.annotations:ome.api.local"/>
		<group title="Client Packages" 
			packages="ome.client:ome.adapaters"/>
		<group title="Model"
			packages="ome.model*:pojos*"/>

 		<link href="http://java.sun.com/j2se/1.5/docs/api/"/>
		<link href="http://www.springframework.org/docs/api/"/>
		<link href="http://www.hibernate.org/hib_docs/v3/api/"/>
		<link href="http://aopalliance.sourceforge.net/doc/"/>

	    </javadoc>
	</target>

</project>
