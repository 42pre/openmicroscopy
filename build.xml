<?xml version="1.0" encoding="utf-8"?>
<project name="main" default="help" basedir=".">
    
	<!-- DOCUMENTATION:
	     =================================================

		ASSUMPTIONS:
		To use this script you must have minimally acquired
		the source code (either from subversion or as
		distribution) and have installed ant. 

	-->

	<import file="components/antlib/resources/build.xml"/>

	<target name="help" depends="usage"/>

	<target name="usage"
		description="Usage information">
		<echo>
			${msg.main.usage}
			${msg.lifecycle.usage}
		</echo>
	</target>

	<!-- 	===============================================
		CHECK SYSTEM 
	==================================================  -->
	<target name="check-system" 
		depends="check-java5,check-jboss"
		description="Verifies that system is ready to build">

		<echo>
${msg.check.report}
1) Java5: ${check-java5-value}
2) JBoss: ${check-jboss-value}

		</echo>

		<fail message="Check failed. See report.">
			<condition><or>
				<not><length string="${check-java5-value}" length="3"/></not>
				<not><length string="${check-jboss-value}" length="3"/></not>
			</or></condition>
		</fail>

	</target>

	<target name="check-java5">
		<sys_test name="java5">
			<not>
			<equals arg1="${ant.java.version}" arg2="1.5"/>
			</not>
		</sys_test>
	</target>

	<target name="check-jboss">
		<sys_test name="jboss">
			<not>
			<isset property="env.JBOSS_HOME"/>
			</not>
		</sys_test>
	</target>
	
	<!-- 	===============================================
		SETUP
	==================================================  -->
	<target name="setup" 
		depends="warning,copy-examples,prompt-for-config"
		description="Prepares code base for compilation"/>
		
	<target name="warning">
		<input
			message="${msg.setup.warning}"
			validargs="y,n"
			addproperty="do.abort"/>

  		<fail>
			<condition>
				<equals arg1="y" arg2="${do.abort}"/>
			</condition>
			${msg.setup.aborted}
		</fail>
	</target>

	<target name="checkout-omero">
		<svn command="co ${subversion.url}"/>
	</target>

	<target name="update-omero">
		<svn command="up"/>
	</target>

	<target name="database-exists">
		<sql_run>
			<transaction> select 'database exists.' </transaction>
		</sql_run>
	</target>

	<target name="copy-examples">
		<copy todir="${basedir}" verbose="true">
			<fileset dir="${basedir}/docs/examples/" includes="*.properties.example"/>
			<globmapper from="*.properties.example" to="*.properties"/>
		</copy>
	</target>

	<target name="prompt-for-config">
		<input>
			${msg.setup.prompt}
		</input>
	</target>

	<!-- 	===============================================
		BUILD
	==================================================  -->
	<target name="fullbuild" depends="check-system,clean,build,reload-db"/>

	<target name="build" depends="dsl,model,install"/>

	<!-- Special Components -->
	<property name="target" value="install"/>

	<target name="dsl" depends="check-system" unless="generate.skip">
		<antRun component="dsl">
			<target name="${target}"/>
		</antRun>
	</target>

	<target name="model" depends="check-system,dsl" unless="generate.skip">
		<antRun component="common">
			<target name="clean"/>
			<target name="${target}"/>
		</antRun>
	</target>

	<target name="build-client" depends="check-system,model">
		<antRun component="common"><target name="install"/></antRun>
		<antRun component="client"><target name="install"/></antRun>
		<antRun component="shoola-adapter"><target name="install"/></antRun>
	</target>

	<target name="build-server" depends="check-system,model">
		<antRun component="common"><target name="install"/></antRun>
		<antRun component="omeio-nio"><target name="install"/></antRun>
		<antRun component="rendering"><target name="install"/></antRun>
		<antRun component="server"><target name="install"/></antRun>
	</target>

	<target name="fulldeploy" depends="check-system,build-server">
		<antRun component="omero-ejb"><target name="install"/></antRun>
		<antRun component="omero-app">
			<target name="package"/>
			<target name="deploy-ear-jboss"/>
		</antRun>
	</target>

	<!-- Multiproject -->
	<target name="multiproject" depends="check-system,variables-define"/>

	<target name="multi" depends="multiproject">
		<iterate target="${target}"/>
	</target>

	<target name="prepare" depends="multiproject">
		<iterate target="prepare"/>
	</target>

	<target name="generate" depends="multiproject">
		<iterate target="generate"/>
	</target>

	<target name="compile" depends="multiproject">
		<iterate target="compile"/>
	</target>

	<target name="test" depends="multiproject">
		<iterate target="test"/>
	</target>

	<target name="package" depends="multiproject">
		<iterate target="package"/>
	</target>

	<target name="install" depends="multiproject">
		<iterate target="install"/>
	</target>

	<target name="integration" depends="multiproject">
		<iterate target="integration"/>
	</target>

	<target name="clean" depends="multiproject">
		<delete dir="${dist.dir}"/>
		<iterate target="clean"/>
	</target>

	<target name="dist" depends="multiproject">
		<mkdir dir="${dist.dir}"/>
		<iterate target="dist"/>
	</target>

	<target name="classpath-download" depends="multiproject">
		<iterate target="classpath-download"/>
	</target>
	<!-- 	===============================================
		Quick Links
	==================================================  -->
	<target name="reload-db">
		<antRun component="common">
			<target name="reload-db"/>
		</antRun>
	</target>

	<target name="javadoc">

	    <patternset id="all.java.files">
		<include name="src/**/*.java"/>
		<include name="target/generated/src/**/*.java"/>
		<exclude name="xxx/**"/>
	    </patternset>

	    <javadoc
		destdir="dist/docs/api"
		author="true"
		version="true"
		use="true"
		windowtitle="OMERO (OME Remote Objects) Server">

		<classpath>
			<fileset dir="lib">
				<include name="**/*.jar"/>
			</fileset>
		</classpath>

		<fileset dir="components/common/" defaultexcludes="yes">
			<patternset refid="all.java.files"/>
		</fileset>
		<fileset dir="components/server/" defaultexcludes="yes">
			<patternset refid="all.java.files"/>
		</fileset>
		<fileset dir="components/omeio-nio/" defaultexcludes="yes">
			<patternset refid="all.java.files"/>
		</fileset>
		<fileset dir="components/rendering/" defaultexcludes="yes">
			<patternset refid="all.java.files"/>
		</fileset>
		<fileset dir="components/client/" defaultexcludes="yes">
			<patternset refid="all.java.files"/>
		</fileset>
		<fileset dir="components/shoola-adapter/" defaultexcludes="yes">
			<patternset refid="all.java.files"/>
		</fileset>

		<doctitle><![CDATA[<h1> Omero API </h1>]]></doctitle>
		<bottom><![CDATA[
		<p><b><i>Copyright &#169; 2005 Open Microscopy Environment. All Rights Reserved.</i></b></p>
		<p>Massachusetts Institute of Technology,</p>
		<p>National Institutes of Health,</p>
		<p>University of Dundee</p>
		]]></bottom>

		<tag name="DEV.TODO" scope="all" description="To do:"/>

		<group title="Common Packages" 
			packages="ome.util:ome.api:ome.conditions"/>
		<group title="Server Packages" 
			packages="ome.services:ome.logic:ome.tools:ome.security:ome.io:ome.rules:omeis:ome.annotations:ome.api.local"/>
		<group title="Client Packages" 
			packages="ome.client:ome.adapaters"/>
		<group title="Model"
			packages="ome.model:pojos"/>

 		<link href="http://java.sun.com/j2se/1.5/docs/api/"/>
		<link href="http://www.springframework.org/docs/api/"/>
		<link href="http://www.hibernate.org/hib_docs/v3/api/"/>
		<link href="http://aopalliance.sourceforge.net/doc/"/>

	    </javadoc>
	</target>

</project>
