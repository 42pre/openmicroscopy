*** Settings ***
Documentation     Tests copying, pasting and applying Rendering settings.

Resource          ../../resources/config.txt
Resource          ../../resources/web/login.txt
Resource          ../../resources/web/tree.txt

Suite Setup         Run Keywords  User "${USERNAME}" logs in with password "${PASSWORD}"  Maximize Browser Window
Suite Teardown      Close all browsers

*** Test Cases ***

Test Rdef Copy Paste Save
    [Documentation]     Copy and Paste rdef, then save

    Select Experimenter
    Select And Expand Image
    Wait Until Page Contains Element        xpath=//tr[contains(@class, 'data_heading_id')]/th[contains(text(), 'Image')]
    ${imageId}=                             Get Text                    xpath=//tr[contains(@class, 'data_heading_id')]/td/strong
    Click Link                              Preview
    Wait Until Page Contains Element        id=viewport-img
    Sleep                                   0.5
    Click Element                           xpath=//button[contains(@class, "copy_rdef")]
    Wait Until Page Contains Element        xpath=//button[contains(@class, "paste_rdef")][not(@disabled="disabled")]
    # Test success of paste in right-click menu by thumbnail refresh
    ${thumbSrc}=                            Execute Javascript  return $("#image_icon-${imageId} img").attr('src')
    Open Context Menu                       xpath=//li[@id='image-${imageId}']/a
    Mouse Over                              xpath=//div[@id='vakata-contextmenu']//a[@rel='renderingsettings']
    Click Element                           xpath=//div[@id='vakata-contextmenu']//a[contains(text(), "Paste and Save")]    #li[6]//li[2]/a   # Paste
    # Confirm dialog (make sure we pick the currently visible dialog)
    Click Element                           xpath=//div[contains(@class,'ui-dialog')][contains(@style,'display: block')]//button/span[contains(text(), 'OK')]
    Wait For Condition                      return ($("#image_icon-${imageId} img").attr('src') != '${thumbSrc}')
    # Test Set Owner's in same way
    ${thumbSrc}=                            Execute Javascript  return $("#image_icon-${imageId} img").attr('src')
    Open Context Menu                       xpath=//li[@id='image-${imageId}']/a
    Mouse Over                              xpath=//div[@id='vakata-contextmenu']//a[@rel='renderingsettings']
    Click Element                           xpath=//div[@id='vakata-contextmenu']//a[contains(text(), "Set Owner")]   # Set Owner's
    # Confirm dialog (make sure we pick the currently visible dialog)
    Click Element                           xpath=//div[contains(@class,'ui-dialog')][contains(@style,'display: block')]//button/span[contains(text(), 'OK')]
    Wait For Condition                      return ($("#image_icon-${imageId} img").attr('src') != '${thumbSrc}')

    Go To                                   ${WELCOME URL}img_detail/${imageId}
    # Toggle the color, then paste settings and check it has reverted
    Wait Until Page Contains Element        id=wblitz-ch0
    ${checked1}=                            Execute Javascript  return ($("#wblitz-rmodel:checked").length == 1)
    Click Element                           id=wblitz-rmodel
    ${checked2}=                            Execute Javascript  return ($("#wblitz-rmodel:checked").length == 1)
    Should Not Be True                      "${checked1}" == "${checked2}"
    Click Link                              Edit
    Click Element                           xpath=//button[contains(@class, "paste_rdef")]
    ${selector}=                            Set Variable If    ${checked1}    1    0
    Log   ${selector}
    Wait For Condition                      return ($("#wblitz-rmodel:checked").length == ${selector})

    # Toggle the color again, Save, refresh page to check
    Set Selenium Speed                      0.5
    Click Element                           id=wblitz-rmodel
    Wait Until Page Contains Element        id=rdef-setdef-btn
    Click Element                           id=rdef-setdef-btn
    # Wait for response
    Wait Until Page Contains Element        id=weblitz-viewport-msg
    Wait For Condition                      return ($(".blockUI").length == 0)
    Reload Page
    Wait Until Page Contains Element        id=wblitz-ch0
    ${checked3}=                            Execute Javascript  return ($("#wblitz-rmodel:checked").length == 1)
    Should Be True                          "${checked2}" == "${checked3}"

