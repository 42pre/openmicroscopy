package ome.model;

import java.util.*;




/**
 * ActualInput generated by hbm2java
 */
public class
ActualInput 
implements java.io.Serializable ,
ome.api.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer actualInputId;
     private FormalInput formalInput;
     private ModuleExecution moduleExecutionByModuleExecutionId;
     private ModuleExecution moduleExecutionByInputModuleExecutionId;


    // Constructors

    /** default constructor */
    public ActualInput() {
    }
    
    /** constructor with id */
    public ActualInput(Integer actualInputId) {
        this.actualInputId = actualInputId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getActualInputId() {
        return this.actualInputId;
    }
    
    public void setActualInputId(Integer actualInputId) {
        this.actualInputId = actualInputId;
    }

    /**
     * 
     */
    public FormalInput getFormalInput() {
        return this.formalInput;
    }
    
    public void setFormalInput(FormalInput formalInput) {
        this.formalInput = formalInput;
    }

    /**
     * 
     */
    public ModuleExecution getModuleExecutionByModuleExecutionId() {
        return this.moduleExecutionByModuleExecutionId;
    }
    
    public void setModuleExecutionByModuleExecutionId(ModuleExecution moduleExecutionByModuleExecutionId) {
        this.moduleExecutionByModuleExecutionId = moduleExecutionByModuleExecutionId;
    }

    /**
     * 
     */
    public ModuleExecution getModuleExecutionByInputModuleExecutionId() {
        return this.moduleExecutionByInputModuleExecutionId;
    }
    
    public void setModuleExecutionByInputModuleExecutionId(ModuleExecution moduleExecutionByInputModuleExecutionId) {
        this.moduleExecutionByInputModuleExecutionId = moduleExecutionByInputModuleExecutionId;
    }






  public boolean acceptFilter(ome.util.Filter filter){


	  // Visiting: ActualInputId ------------------------------------------
	  Integer _ActualInputId = null;
	  try {
	     _ActualInputId = getActualInputId();
	  } catch (Exception e) {
		 setActualInputId(null);
	  }

	  setActualInputId((Integer) filter.filter(ACTUALINPUTID,_ActualInputId)); 

	  // Visiting: FormalInput ------------------------------------------
	  FormalInput _FormalInput = null;
	  try {
	     _FormalInput = getFormalInput();
	  } catch (Exception e) {
		 setFormalInput(null);
	  }

	  setFormalInput((FormalInput) filter.filter(FORMALINPUT,_FormalInput)); 

	  // Visiting: ModuleExecutionByModuleExecutionId ------------------------------------------
	  ModuleExecution _ModuleExecutionByModuleExecutionId = null;
	  try {
	     _ModuleExecutionByModuleExecutionId = getModuleExecutionByModuleExecutionId();
	  } catch (Exception e) {
		 setModuleExecutionByModuleExecutionId(null);
	  }

	  setModuleExecutionByModuleExecutionId((ModuleExecution) filter.filter(MODULEEXECUTIONBYMODULEEXECUTIONID,_ModuleExecutionByModuleExecutionId)); 

	  // Visiting: ModuleExecutionByInputModuleExecutionId ------------------------------------------
	  ModuleExecution _ModuleExecutionByInputModuleExecutionId = null;
	  try {
	     _ModuleExecutionByInputModuleExecutionId = getModuleExecutionByInputModuleExecutionId();
	  } catch (Exception e) {
		 setModuleExecutionByInputModuleExecutionId(null);
	  }

	  setModuleExecutionByInputModuleExecutionId((ModuleExecution) filter.filter(MODULEEXECUTIONBYINPUTMODULEEXECUTIONID,_ModuleExecutionByInputModuleExecutionId)); 
   	 return true;
  }
  
  public String toString(){
	return "ActualInput"+(actualInputId==null ? ":Hash_"+this.hashCode() : ":Id_"+actualInputId);
  }
  
  // FIELD-FIELDS
  
	public final static String ACTUALINPUTID = "ActualInput_ActualInputId";
	public final static String FORMALINPUT = "ActualInput_FormalInput";
	public final static String MODULEEXECUTIONBYMODULEEXECUTIONID = "ActualInput_ModuleExecutionByModuleExecutionId";
	public final static String MODULEEXECUTIONBYINPUTMODULEEXECUTIONID = "ActualInput_ModuleExecutionByInputModuleExecutionId";
 	public final static Set FIELDS = new HashSet();
	static {
	   FIELDS.add(ACTUALINPUTID);
	   FIELDS.add(FORMALINPUT);
	   FIELDS.add(MODULEEXECUTIONBYMODULEEXECUTIONID);
	   FIELDS.add(MODULEEXECUTIONBYINPUTMODULEEXECUTIONID);
 	}


}
