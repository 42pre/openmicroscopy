package ome.model;

import java.util.*;




/**
 * AnalysisChainLink generated by hbm2java
 */
public class
AnalysisChainLink 
implements java.io.Serializable ,
ome.api.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer analysisChainLinkId;
     private AnalysisChain analysisChain;
     private AnalysisChainNode analysisChainNodeByToNode;
     private AnalysisChainNode analysisChainNodeByFromNode;
     private FormalOutput formalOutput;
     private FormalInput formalInput;


    // Constructors

    /** default constructor */
    public AnalysisChainLink() {
    }
    
    /** constructor with id */
    public AnalysisChainLink(Integer analysisChainLinkId) {
        this.analysisChainLinkId = analysisChainLinkId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getAnalysisChainLinkId() {
        return this.analysisChainLinkId;
    }
    
    public void setAnalysisChainLinkId(Integer analysisChainLinkId) {
        this.analysisChainLinkId = analysisChainLinkId;
    }

    /**
     * 
     */
    public AnalysisChain getAnalysisChain() {
        return this.analysisChain;
    }
    
    public void setAnalysisChain(AnalysisChain analysisChain) {
        this.analysisChain = analysisChain;
    }

    /**
     * 
     */
    public AnalysisChainNode getAnalysisChainNodeByToNode() {
        return this.analysisChainNodeByToNode;
    }
    
    public void setAnalysisChainNodeByToNode(AnalysisChainNode analysisChainNodeByToNode) {
        this.analysisChainNodeByToNode = analysisChainNodeByToNode;
    }

    /**
     * 
     */
    public AnalysisChainNode getAnalysisChainNodeByFromNode() {
        return this.analysisChainNodeByFromNode;
    }
    
    public void setAnalysisChainNodeByFromNode(AnalysisChainNode analysisChainNodeByFromNode) {
        this.analysisChainNodeByFromNode = analysisChainNodeByFromNode;
    }

    /**
     * 
     */
    public FormalOutput getFormalOutput() {
        return this.formalOutput;
    }
    
    public void setFormalOutput(FormalOutput formalOutput) {
        this.formalOutput = formalOutput;
    }

    /**
     * 
     */
    public FormalInput getFormalInput() {
        return this.formalInput;
    }
    
    public void setFormalInput(FormalInput formalInput) {
        this.formalInput = formalInput;
    }






  public boolean acceptFilter(ome.util.Filter filter){


	  // Visiting: AnalysisChainLinkId ------------------------------------------
	  Integer _AnalysisChainLinkId = null;
	  try {
	     _AnalysisChainLinkId = getAnalysisChainLinkId();
	  } catch (Exception e) {
		 setAnalysisChainLinkId(null);
	  }

	  setAnalysisChainLinkId((Integer) filter.filter(ANALYSISCHAINLINKID,_AnalysisChainLinkId)); 

	  // Visiting: AnalysisChain ------------------------------------------
	  AnalysisChain _AnalysisChain = null;
	  try {
	     _AnalysisChain = getAnalysisChain();
	  } catch (Exception e) {
		 setAnalysisChain(null);
	  }

	  setAnalysisChain((AnalysisChain) filter.filter(ANALYSISCHAIN,_AnalysisChain)); 

	  // Visiting: AnalysisChainNodeByToNode ------------------------------------------
	  AnalysisChainNode _AnalysisChainNodeByToNode = null;
	  try {
	     _AnalysisChainNodeByToNode = getAnalysisChainNodeByToNode();
	  } catch (Exception e) {
		 setAnalysisChainNodeByToNode(null);
	  }

	  setAnalysisChainNodeByToNode((AnalysisChainNode) filter.filter(ANALYSISCHAINNODEBYTONODE,_AnalysisChainNodeByToNode)); 

	  // Visiting: AnalysisChainNodeByFromNode ------------------------------------------
	  AnalysisChainNode _AnalysisChainNodeByFromNode = null;
	  try {
	     _AnalysisChainNodeByFromNode = getAnalysisChainNodeByFromNode();
	  } catch (Exception e) {
		 setAnalysisChainNodeByFromNode(null);
	  }

	  setAnalysisChainNodeByFromNode((AnalysisChainNode) filter.filter(ANALYSISCHAINNODEBYFROMNODE,_AnalysisChainNodeByFromNode)); 

	  // Visiting: FormalOutput ------------------------------------------
	  FormalOutput _FormalOutput = null;
	  try {
	     _FormalOutput = getFormalOutput();
	  } catch (Exception e) {
		 setFormalOutput(null);
	  }

	  setFormalOutput((FormalOutput) filter.filter(FORMALOUTPUT,_FormalOutput)); 

	  // Visiting: FormalInput ------------------------------------------
	  FormalInput _FormalInput = null;
	  try {
	     _FormalInput = getFormalInput();
	  } catch (Exception e) {
		 setFormalInput(null);
	  }

	  setFormalInput((FormalInput) filter.filter(FORMALINPUT,_FormalInput)); 
   	 return true;
  }
  
  public String toString(){
	return "AnalysisChainLink"+(analysisChainLinkId==null ? ":Hash_"+this.hashCode() : ":Id_"+analysisChainLinkId);
  }
  
  // FIELD-FIELDS
  
	public final static String ANALYSISCHAINLINKID = "AnalysisChainLink_AnalysisChainLinkId";
	public final static String ANALYSISCHAIN = "AnalysisChainLink_AnalysisChain";
	public final static String ANALYSISCHAINNODEBYTONODE = "AnalysisChainLink_AnalysisChainNodeByToNode";
	public final static String ANALYSISCHAINNODEBYFROMNODE = "AnalysisChainLink_AnalysisChainNodeByFromNode";
	public final static String FORMALOUTPUT = "AnalysisChainLink_FormalOutput";
	public final static String FORMALINPUT = "AnalysisChainLink_FormalInput";
 	public final static Set FIELDS = new HashSet();
	static {
	   FIELDS.add(ANALYSISCHAINLINKID);
	   FIELDS.add(ANALYSISCHAIN);
	   FIELDS.add(ANALYSISCHAINNODEBYTONODE);
	   FIELDS.add(ANALYSISCHAINNODEBYFROMNODE);
	   FIELDS.add(FORMALOUTPUT);
	   FIELDS.add(FORMALINPUT);
 	}


}
