package ome.model;

import java.util.*;




/**
 * StackStatistics generated by hbm2java
 */
public class
StackStatistics 
implements java.io.Serializable ,
ome.api.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer attributeId;
     private Integer minimum;
     private Integer maximum;
     private Integer theT;
     private Float centroidY;
     private Integer theC;
     private Float mean;
     private Float centroidZ;
     private Float geosigma;
     private Float geomean;
     private Float sigma;
     private Float centroidX;
     private Image image;
     private ModuleExecution moduleExecution;


    // Constructors

    /** default constructor */
    public StackStatistics() {
    }
    
    /** constructor with id */
    public StackStatistics(Integer attributeId) {
        this.attributeId = attributeId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getAttributeId() {
        return this.attributeId;
    }
    
    public void setAttributeId(Integer attributeId) {
        this.attributeId = attributeId;
    }

    /**
     * 
     */
    public Integer getMinimum() {
        return this.minimum;
    }
    
    public void setMinimum(Integer minimum) {
        this.minimum = minimum;
    }

    /**
     * 
     */
    public Integer getMaximum() {
        return this.maximum;
    }
    
    public void setMaximum(Integer maximum) {
        this.maximum = maximum;
    }

    /**
     * 
     */
    public Integer getTheT() {
        return this.theT;
    }
    
    public void setTheT(Integer theT) {
        this.theT = theT;
    }

    /**
     * 
     */
    public Float getCentroidY() {
        return this.centroidY;
    }
    
    public void setCentroidY(Float centroidY) {
        this.centroidY = centroidY;
    }

    /**
     * 
     */
    public Integer getTheC() {
        return this.theC;
    }
    
    public void setTheC(Integer theC) {
        this.theC = theC;
    }

    /**
     * 
     */
    public Float getMean() {
        return this.mean;
    }
    
    public void setMean(Float mean) {
        this.mean = mean;
    }

    /**
     * 
     */
    public Float getCentroidZ() {
        return this.centroidZ;
    }
    
    public void setCentroidZ(Float centroidZ) {
        this.centroidZ = centroidZ;
    }

    /**
     * 
     */
    public Float getGeosigma() {
        return this.geosigma;
    }
    
    public void setGeosigma(Float geosigma) {
        this.geosigma = geosigma;
    }

    /**
     * 
     */
    public Float getGeomean() {
        return this.geomean;
    }
    
    public void setGeomean(Float geomean) {
        this.geomean = geomean;
    }

    /**
     * 
     */
    public Float getSigma() {
        return this.sigma;
    }
    
    public void setSigma(Float sigma) {
        this.sigma = sigma;
    }

    /**
     * 
     */
    public Float getCentroidX() {
        return this.centroidX;
    }
    
    public void setCentroidX(Float centroidX) {
        this.centroidX = centroidX;
    }

    /**
     * 
     */
    public Image getImage() {
        return this.image;
    }
    
    public void setImage(Image image) {
        this.image = image;
    }

    /**
     * 
     */
    public ModuleExecution getModuleExecution() {
        return this.moduleExecution;
    }
    
    public void setModuleExecution(ModuleExecution moduleExecution) {
        this.moduleExecution = moduleExecution;
    }






  public boolean acceptFilter(ome.util.Filter filter){


	  // Visiting: AttributeId ------------------------------------------
	  Integer _AttributeId = null;
	  try {
	     _AttributeId = getAttributeId();
	  } catch (Exception e) {
		 setAttributeId(null);
	  }

	  setAttributeId((Integer) filter.filter(ATTRIBUTEID,_AttributeId)); 

	  // Visiting: Minimum ------------------------------------------
	  Integer _Minimum = null;
	  try {
	     _Minimum = getMinimum();
	  } catch (Exception e) {
		 setMinimum(null);
	  }

	  setMinimum((Integer) filter.filter(MINIMUM,_Minimum)); 

	  // Visiting: Maximum ------------------------------------------
	  Integer _Maximum = null;
	  try {
	     _Maximum = getMaximum();
	  } catch (Exception e) {
		 setMaximum(null);
	  }

	  setMaximum((Integer) filter.filter(MAXIMUM,_Maximum)); 

	  // Visiting: TheT ------------------------------------------
	  Integer _TheT = null;
	  try {
	     _TheT = getTheT();
	  } catch (Exception e) {
		 setTheT(null);
	  }

	  setTheT((Integer) filter.filter(THET,_TheT)); 

	  // Visiting: CentroidY ------------------------------------------
	  Float _CentroidY = null;
	  try {
	     _CentroidY = getCentroidY();
	  } catch (Exception e) {
		 setCentroidY(null);
	  }

	  setCentroidY((Float) filter.filter(CENTROIDY,_CentroidY)); 

	  // Visiting: TheC ------------------------------------------
	  Integer _TheC = null;
	  try {
	     _TheC = getTheC();
	  } catch (Exception e) {
		 setTheC(null);
	  }

	  setTheC((Integer) filter.filter(THEC,_TheC)); 

	  // Visiting: Mean ------------------------------------------
	  Float _Mean = null;
	  try {
	     _Mean = getMean();
	  } catch (Exception e) {
		 setMean(null);
	  }

	  setMean((Float) filter.filter(MEAN,_Mean)); 

	  // Visiting: CentroidZ ------------------------------------------
	  Float _CentroidZ = null;
	  try {
	     _CentroidZ = getCentroidZ();
	  } catch (Exception e) {
		 setCentroidZ(null);
	  }

	  setCentroidZ((Float) filter.filter(CENTROIDZ,_CentroidZ)); 

	  // Visiting: Geosigma ------------------------------------------
	  Float _Geosigma = null;
	  try {
	     _Geosigma = getGeosigma();
	  } catch (Exception e) {
		 setGeosigma(null);
	  }

	  setGeosigma((Float) filter.filter(GEOSIGMA,_Geosigma)); 

	  // Visiting: Geomean ------------------------------------------
	  Float _Geomean = null;
	  try {
	     _Geomean = getGeomean();
	  } catch (Exception e) {
		 setGeomean(null);
	  }

	  setGeomean((Float) filter.filter(GEOMEAN,_Geomean)); 

	  // Visiting: Sigma ------------------------------------------
	  Float _Sigma = null;
	  try {
	     _Sigma = getSigma();
	  } catch (Exception e) {
		 setSigma(null);
	  }

	  setSigma((Float) filter.filter(SIGMA,_Sigma)); 

	  // Visiting: CentroidX ------------------------------------------
	  Float _CentroidX = null;
	  try {
	     _CentroidX = getCentroidX();
	  } catch (Exception e) {
		 setCentroidX(null);
	  }

	  setCentroidX((Float) filter.filter(CENTROIDX,_CentroidX)); 

	  // Visiting: Image ------------------------------------------
	  Image _Image = null;
	  try {
	     _Image = getImage();
	  } catch (Exception e) {
		 setImage(null);
	  }

	  setImage((Image) filter.filter(IMAGE,_Image)); 

	  // Visiting: ModuleExecution ------------------------------------------
	  ModuleExecution _ModuleExecution = null;
	  try {
	     _ModuleExecution = getModuleExecution();
	  } catch (Exception e) {
		 setModuleExecution(null);
	  }

	  setModuleExecution((ModuleExecution) filter.filter(MODULEEXECUTION,_ModuleExecution)); 
   	 return true;
  }
  
  public String toString(){
	return "StackStatistics"+(attributeId==null ? ":Hash_"+this.hashCode() : ":Id_"+attributeId);
  }
  
  // FIELD-FIELDS
  
	public final static String ATTRIBUTEID = "StackStatistics_AttributeId";
	public final static String MINIMUM = "StackStatistics_Minimum";
	public final static String MAXIMUM = "StackStatistics_Maximum";
	public final static String THET = "StackStatistics_TheT";
	public final static String CENTROIDY = "StackStatistics_CentroidY";
	public final static String THEC = "StackStatistics_TheC";
	public final static String MEAN = "StackStatistics_Mean";
	public final static String CENTROIDZ = "StackStatistics_CentroidZ";
	public final static String GEOSIGMA = "StackStatistics_Geosigma";
	public final static String GEOMEAN = "StackStatistics_Geomean";
	public final static String SIGMA = "StackStatistics_Sigma";
	public final static String CENTROIDX = "StackStatistics_CentroidX";
	public final static String IMAGE = "StackStatistics_Image";
	public final static String MODULEEXECUTION = "StackStatistics_ModuleExecution";
 	public final static Set FIELDS = new HashSet();
	static {
	   FIELDS.add(ATTRIBUTEID);
	   FIELDS.add(MINIMUM);
	   FIELDS.add(MAXIMUM);
	   FIELDS.add(THET);
	   FIELDS.add(CENTROIDY);
	   FIELDS.add(THEC);
	   FIELDS.add(MEAN);
	   FIELDS.add(CENTROIDZ);
	   FIELDS.add(GEOSIGMA);
	   FIELDS.add(GEOMEAN);
	   FIELDS.add(SIGMA);
	   FIELDS.add(CENTROIDX);
	   FIELDS.add(IMAGE);
	   FIELDS.add(MODULEEXECUTION);
 	}


}
