package ome.model;

import java.util.*;




/**
 * OriginalFile generated by hbm2java
 */
public class
OriginalFile 
implements java.io.Serializable ,
ome.api.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer attributeId;
     private String sha1;
     private String format;
     private String path;
     private Long fileId;
     private Repository repository;
     private ModuleExecution moduleExecution;


    // Constructors

    /** default constructor */
    public OriginalFile() {
    }
    
    /** constructor with id */
    public OriginalFile(Integer attributeId) {
        this.attributeId = attributeId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getAttributeId() {
        return this.attributeId;
    }
    
    public void setAttributeId(Integer attributeId) {
        this.attributeId = attributeId;
    }

    /**
     * 
     */
    public String getSha1() {
        return this.sha1;
    }
    
    public void setSha1(String sha1) {
        this.sha1 = sha1;
    }

    /**
     * 
     */
    public String getFormat() {
        return this.format;
    }
    
    public void setFormat(String format) {
        this.format = format;
    }

    /**
     * 
     */
    public String getPath() {
        return this.path;
    }
    
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * 
     */
    public Long getFileId() {
        return this.fileId;
    }
    
    public void setFileId(Long fileId) {
        this.fileId = fileId;
    }

    /**
     * 
     */
    public Repository getRepository() {
        return this.repository;
    }
    
    public void setRepository(Repository repository) {
        this.repository = repository;
    }

    /**
     * 
     */
    public ModuleExecution getModuleExecution() {
        return this.moduleExecution;
    }
    
    public void setModuleExecution(ModuleExecution moduleExecution) {
        this.moduleExecution = moduleExecution;
    }






  public boolean acceptFilter(ome.util.Filter filter){


	  // Visiting: AttributeId ------------------------------------------
	  Integer _AttributeId = null;
	  try {
	     _AttributeId = getAttributeId();
	  } catch (Exception e) {
		 setAttributeId(null);
	  }

	  setAttributeId((Integer) filter.filter(ATTRIBUTEID,_AttributeId)); 

	  // Visiting: Sha1 ------------------------------------------
	  String _Sha1 = null;
	  try {
	     _Sha1 = getSha1();
	  } catch (Exception e) {
		 setSha1(null);
	  }

	  setSha1((String) filter.filter(SHA1,_Sha1)); 

	  // Visiting: Format ------------------------------------------
	  String _Format = null;
	  try {
	     _Format = getFormat();
	  } catch (Exception e) {
		 setFormat(null);
	  }

	  setFormat((String) filter.filter(FORMAT,_Format)); 

	  // Visiting: Path ------------------------------------------
	  String _Path = null;
	  try {
	     _Path = getPath();
	  } catch (Exception e) {
		 setPath(null);
	  }

	  setPath((String) filter.filter(PATH,_Path)); 

	  // Visiting: FileId ------------------------------------------
	  Long _FileId = null;
	  try {
	     _FileId = getFileId();
	  } catch (Exception e) {
		 setFileId(null);
	  }

	  setFileId((Long) filter.filter(FILEID,_FileId)); 

	  // Visiting: Repository ------------------------------------------
	  Repository _Repository = null;
	  try {
	     _Repository = getRepository();
	  } catch (Exception e) {
		 setRepository(null);
	  }

	  setRepository((Repository) filter.filter(REPOSITORY,_Repository)); 

	  // Visiting: ModuleExecution ------------------------------------------
	  ModuleExecution _ModuleExecution = null;
	  try {
	     _ModuleExecution = getModuleExecution();
	  } catch (Exception e) {
		 setModuleExecution(null);
	  }

	  setModuleExecution((ModuleExecution) filter.filter(MODULEEXECUTION,_ModuleExecution)); 
   	 return true;
  }
  
  public String toString(){
	return "OriginalFile"+(attributeId==null ? ":Hash_"+this.hashCode() : ":Id_"+attributeId);
  }
  
  // FIELD-FIELDS
  
	public final static String ATTRIBUTEID = "OriginalFile_AttributeId";
	public final static String SHA1 = "OriginalFile_Sha1";
	public final static String FORMAT = "OriginalFile_Format";
	public final static String PATH = "OriginalFile_Path";
	public final static String FILEID = "OriginalFile_FileId";
	public final static String REPOSITORY = "OriginalFile_Repository";
	public final static String MODULEEXECUTION = "OriginalFile_ModuleExecution";
 	public final static Set FIELDS = new HashSet();
	static {
	   FIELDS.add(ATTRIBUTEID);
	   FIELDS.add(SHA1);
	   FIELDS.add(FORMAT);
	   FIELDS.add(PATH);
	   FIELDS.add(FILEID);
	   FIELDS.add(REPOSITORY);
	   FIELDS.add(MODULEEXECUTION);
 	}


}
