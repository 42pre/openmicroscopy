####################################################
#
# This file provides queries and data for testing 
# the database layer. Properties can be of the form:
# 
#   key = select <rest of sql query>
#   key = <comma separated integers>
#
# Sql queries should be kept as simple and as portable
# as humanly possbile.
#
# Conventions:
# -----------
#   For keys of the form x.y, when x refers to a table
#   it should equal the unqualified Java class name.
#   y = count implies a List with a single Long value
#   y = ids implies a List of Longs
# 
#   For keys of the form x.y.z, 
#   x = unqualified class
#   y = adjective
#   z as y above
####################################################

#
#PDI
#
Project.count = select count(project_id) from projects
Project.ids = select project_id from projects
Dataset.count = select count(dataset_id) from datasets
Dataset.ids = select dataset_id from datasets
Image.count = select count(image_id) from images
Image.ids = select image_id from images

#
#CGCI
#
CategoryGroup.count = select count(attribute_id) from category_groups
CategoryGroup.ids = select attribute_id from category_groups
Category.count = select count(attribute_id) from categories
Category.ids = select attribute_id from categories

#
#ANNOTATIONS
#
Image.Annotated.ids = select i.image_id from images i, \
                      image_annotations ia \
                      where i.image_id = ia.image_id group by \
                      i.image_id
Dataset.Annotated.ids = select d.dataset_id from datasets d, \
                      dataset_annotations da \
                      where d.dataset_id = da.dataset_id group by \
                      d.dataset_id

#
#MEX
#
Module.names = select name from modules
Module.count = select count(module_id) from modules
Module.ids = select module_id from modules
ModuleExecution.ids = select module_execution_id from module_executions
ModuleExecution.count = select count(module_execution_id) from module_executions

#
# Groups/Experimenter
#

Experimenter.ids = select attribute_id from experimenters
Experimenter.names = select ome_name from experimenters
Group.ids = select attribute_id from groups
Group.names = select name from groups

Owner.MostImages =  select e.attribute_id as id, e.ome_name, g.attribute_id as group, count(i.image_id) \
					from experimenters e, groups g, images i \
					where i.experimenter_id = e.attribute_id and e.group_id = g.attribute_id \
					group by e.attribute_id, e.ome_name, g.attribute_id \
					order by count(i.image_id) desc;

Owner.MostImages.id = select e.attribute_id from experimenters e, images i \
					where i.experimenter_id = e.attribute_id \
					group by e.attribute_id, e.ome_name \
					order by count(i.image_id) \
					desc limit 1
Project.ofOwner.MostImages = select p.project_id from projects p \
					where p.owner_id in (\
					${Owner.MostImages.id} )
Dataset.ofOwner.MostImages  = select d.dataset_id from datasets d \
					where d.owner_id in (\
					${Owner.MostImages.id} )
CategoryGroup.ofOwner.MostImages = select cg.attribute_id from category_groups cg, module_executions mex \
					where cg.module_execution_id = mex.module_execution_id and mex.experimenter_id in (\
					${Owner.MostImages.id} )
Category.ofOwner.MostImages = select c.attribute_id from categories c, module_executions mex \
					where c.module_execution_id = mex.module_execution_id and mex.experimenter_id in (\
					${Owner.MostImages.id} )
Image.ofOwner.MostImages = select i.image_id from images i \
					where i.experimenter_id in (\
					${Owner.MostImages.id} )
					
#
#CGCPaths
#
# Note: This will return null values in the images field because of the outer join. 
# This will have to be taken into account when using this query.
CGCPaths.all = select cg.attribute_id as cg, c.attribute_id as c, i.image_id as i \
				from category_groups cg, categories c \
				left outer join classification cla on (cla.category = c.attribute_id) \
				left outer join images i on (i.image_id = cla.image_id) \
				where c.category_group = cg.attribute_id
#
#Counting
#
Counting.ProjectDatasetCount = select project_id as id, count(dataset_id) as count from project_dataset_map group by project_id
Counting.DatasetImageCount = select dataset_id as id, count(image_id) as count from image_dataset_map group by dataset_id
Counting.GroupExperimenterCount = select g.attribute_id as id, count(e.attribute_id) as count from groups g, experimenters e \
									where e.group_id = g.attribute_id group by g.attribute_id
#
# Concrete Data:
# -------------
# Some lines are for testing the parsing of this file itself
#
simple.test = 1, 2, 3, 4, 5

