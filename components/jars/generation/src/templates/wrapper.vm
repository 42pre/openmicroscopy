#set ($file = "wrapper.vm") 

#if( $package )
  package ${package}.srv;
  import ${package}.interfaces.*;
#else
  import interfaces.*;  
#end
  import org.ome.LSObject;
  import java.util.Iterator;
  import java.util.ArrayList;
  import java.util.List;

/** autogenerated by Velocity template $file */

public class ${class.LocalName}Wrapper
{

	public static List wrap(List lsObjects){
		List results = new ArrayList();
		for (Iterator iter = lsObjects.iterator();iter.hasNext();){
			results.add(wrap((LSObject)iter.next()));
		}
		return results;
	}
	
	public static ${class.LocalName} wrap(LSObject lsObject){
		$class.LocalName obj = new ${class.LocalName}();
#foreach( $p in $class.Predicates )
	 	//-----------------------------------
		// $p
		#set ( $t = $p.Type )
		#set ( $n = $p.LocalName )
		obj.set${util.uc(${p.LocalName})}(($t)lsObject.get("${p.URI}")); 
#end
		return obj;
	}
}
