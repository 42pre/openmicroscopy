#*
file: Control.vm
This is the control template for a OWL binding generator.
*#
Starting: $now
Generating Vocabulary >>>>>>>>>>>>>>>>>>>>>>>.
#set ($outputFile = "model/Vocabulary.java" )
$generator.parse("vocab.vm", $outputFile, "[Vocab]", $predicates)
Generating Classes>>>>>>>>>>>>>>>>>>>>>>>.
#set ($outputFile = "model/Factory.java")
$generator.parse("factory.vm",$outputFile,"[Factory]",$classes)
#set ($outputFile = "xsd/Base.xsd")
$generator.parse("base.vm",$outputFile,"[Base]",$classes)
#foreach ($class in $classes)
    #set ($outputFile = "xsd/${class.localName}.xsd" )
    $generator.parse("schema.vm", $outputFile, "[XSD]", $class)
    #set ($outputFile = "model/I${class.localName}.java" )
    $generator.parse("interface.vm", $outputFile, "[Interface]", $class)
    #set ($outputFile = "model/${class.localName}.java" )
    $generator.parse("model.vm", $outputFile, "[Model]", $class)
    #set ($outputFile = "model/${class.localName}Wrapper.java" )
    $generator.parse("wrapper.vm", $outputFile, "[Wrapper]", $class)
#end
Generating Services >>>>>>>>>>>>>>>>>>
#foreach ($module in $modules)
    #set ($outputFile = "${module}Vocabulary.java" )
    $generator.parse("vocab.vm", $outputFile, "[OWL2VOCAB]", $module)
    #set ($outputFile = "${module}Interface.java" )
    $generator.parse("interface.vm", $outputFile, "[OWL2INTERFACE]", $module)
#end
