#set ($file = "wrapper.vm") 

#if( $package )
  package ${package}.srv;
  import ${package}.interfaces.*;
#else
  import interfaces.*;  
#end
  import java.util.HashMap;

/** autogenerated by Velocity template $file */

public class ${class.LocalName}
#if ($class.SuperClass)
#set ($super = $class.SuperClass)
   extends ${super.LocalName} 
#end
   implements I${class.LocalName},ILSObject
{

	public static final float version = $version ;

	public String getURI(){
		return I${class.LocalName}.URI;
	}

#foreach( $p in $class.Predicates )
 	//-----------------------------------
	// $p
	#set ( $t = $p.Type )
	#set ( $n = $p.LocalName )
	$t $n ;
	public $t get${util.uc(${n})}(){
		return $n;
	}
	public boolean set${util.uc(${n})}($t value){
		this.$n = value;
		return true;
	}

#end

    public boolean put(String str, Object obj){
	  boolean value;

	  if (null != str){
#foreach( $p in $class.Predicates )
#set ( $t = $p.Type )
#set ( $n = $p.LocalName )
    	  if (str.equals("$p.URI")) {
    	     this.set${util.uc(${n})}(obj);
	      } else
#end
          {
       		 value = super.put(str,obj);
	      }
	   }
	   return value;
    }
}
