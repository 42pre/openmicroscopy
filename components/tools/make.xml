<?xml version="1.0" encoding="utf-8"?>
<project name="make" default="install" basedir=".">

    <property name="env.DESTDIR"     value="${up-two}/target/"/>
    <property name="env.LDFLAGS"     value="-fPIC"/>
    <property name="env.CXXFLAGS"    value="-fPIC -O0 -g -D_REENTRANT -Wall"/>
    <property name="env.J"           value="1"/>
    <!-- Checking for ccache before making it the default. -->
    <available property="env.CXX" filepath="${env.PATH}" file="ccache" value="ccache g++"/>
    <property name="env.CXX"         value="g++"/>

    <defineVariables/>

    <condition property="env.MAC_UNIVERSAL" value="-arch i386 -arch ppc" else="">
        <and><os family="mac"/><os family="unix"/></and>
    </condition>

    <condition property="env.MAC_TRACKING" value="--disable-dependency-tracking" else="">
        <and><os family="mac"/><os family="unix"/></and>
    </condition>

    <macrodef name="autogen">
        <attribute name="file" default="${basedir}/../autogen.sh"/>
        <attribute name="icehome" default="${ice.home}"/>
        <attribute name="ldflags" default="${env.LDFLAGS} ${env.MAC_UNIVERSAL}"/>
        <attribute name="cxxflags" default="${env.CXXFLAGS} ${env.MAC_UNIVERSAL}"/>
        <attribute name="other" default="${env.MAC_TRACKING}"/>
        <sequential>
        <exec executable="@{file}" failonerror="true">
            <arg value="--with-ice=${ice.home}"/>
            <arg value="--prefix=${env.DESTDIR}"/>
            <arg value="CXX=${env.CXX}"/>
            <arg value="CXXFLAGS=@{ldflags}"/>
            <arg value="LDFLAGS=@{ldflags}"/>
            <arg line="@{other}"/>
        </exec>
        </sequential>
    </macrodef>

    <macrodef name="make">
        <attribute name="dir" default="${basedir}"/>
        <attribute name="failonerror" default="true"/>
        <element name="args" implicit="yes"/>
        <sequential>
        <exec executable="make" dir="@{dir}" failonerror="@{failonerror}">
            <args/>
        </exec>
        </sequential>
    </macrodef>

    <target name="make-autogen" unless="env.NOMAKE">
        <autogen/>
    </target>

    <target name="make-build" unless="env.NOMAKE">
        <autogen/>
        <make dir="src"> <arg value="slice"/> </make>
        <make dir="src"> <arg value="-j${env.J}"/> </make>
        <make dir="src"> <arg value="install"/> </make>
    </target>

    <target name="make-test" unless="env.NOMAKE">
        <make dir="test"> <arg value="all"/> </make>
    </target>

    <target name="make-install" unless="env.NOMAKE">
        <copy todir="../target/include">
            <fileset dir="src"    includes="**/*.h"/>
            <fileset dir="target" includes="**/*.h"/>
        </copy>
    </target>

    <target name="make-clean" unless="env.NOMAKE">
        <!-- Doesn't fail on error to permit calling the target twice -->
        <make failonerror="false"> <arg value="clean-all"/> </make>
        <delete dir="${basedir}/target"/>
    </target>

    <target name="findbugs">
        <echo>Not yet implemented</echo>
    </target>

</project>
