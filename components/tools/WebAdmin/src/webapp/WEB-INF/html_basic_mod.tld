<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE taglib
PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
"http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">

<taglib>

<!-- ============== Tag Library Description Elements ============= -->

<tlib-version>1.0</tlib-version>
<jsp-version>1.2</jsp-version>
<short-name>h</short-name>
<uri>http://java.sun.com/jsf/html_mod</uri>
<description>
Hack
</description>

<!-- ============== Tag Library Validator ============= -->

<validator>
  <validator-class>
    com.sun.faces.taglib.html_basic.HtmlBasicValidator
  </validator-class>
</validator>


  <tag>
    <name>inputText</name>
    <tag-class>com.sun.faces.taglib.html_basic.InputTextTag</tag-class>
    <tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
    <body-content>JSP</body-content>
    <description>
      <![CDATA[<p>Renders an HTML "input"
      element of "type" "text".</p><p><a name="decode">Decode Behavior</a></p><ul><p>Obtain the <code>Map</code> from the "requestParameterMap"
      property of the <code>ExternalContext</code>.  If the<code>Map</code> contains an entry for the "clientId" of the
      component, pass the value of the entry to the<code>setSubmittedValue()</code> method of the component, which
      must be an instance of <code>EditableValueHolder</code>.</p></ul><p>Encode Behavior</p><ul><p>  Render the clientId of the component as
      the value of the "name" attribute.  Render the current value of
      the component as the value of the "value" attribute.  If the
      "styleClass" attribute is specified, render its value as the value
      of the "class" attribute.</p></ul>]]>
    </description>
    <attribute>
      <name>converter</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Converter instance registered with this component.
      </description>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      
          The component identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
      </description>
    </attribute>
    <attribute>
      <name>immediate</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
      </description>
    </attribute>
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
      </description>
    </attribute>
    <attribute>
      <name>required</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that the user is required to provide a submitted
          value for this input component.
      </description>
    </attribute>
    <attribute>
      <name>validator</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          MethodBinding representing a validator method that will be called
          during Process Validations to perform correctness checks on the
          value of this component.  The expression must evaluate to a public
          method that takes FacesContext, UIComponent, and Object parameters,
          with a return type of void.
      </description>
    </attribute>
    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      
          The current value of this component.
      </description>
    </attribute>
    <attribute>
      <name>valueChangeListener</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          MethodBinding representing a value change listener method that will be
          notified when a new value has been set for this input component.  The
          expression must evaluate to a public method that takes a
          ValueChangeEvent parameter, with a return type of void.
      </description>
    </attribute>
    <attribute>
      <name>accesskey</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Access key that, when pressed, transfers focus
          to this element.
      </description>
    </attribute>
    <attribute>
      <name>alt</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Alternate textual description of the
          element rendered by this component.
      </description>
    </attribute>
    <attribute>
      <name>dir</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Direction indication for text that does not inherit directionality.
          Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).
      </description>
    </attribute>
    <attribute>
      <name>disabled</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that this element must never
          receive focus or be included in a subsequent
          submit.
      </description>
    </attribute>
    <attribute>
      <name>lang</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Code describing the language used in the generated markup
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>maxlength</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The maximum number of characters that may
          be entered in this field.
      </description>
    </attribute>
    <attribute>
      <name>onblur</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element loses focus.
      </description>
    </attribute>
    <attribute>
      <name>onchange</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element loses focus
          and its value has been modified since gaining focus.
      </description>
    </attribute>
    <attribute>
      <name>onclick</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          clicked over this element.
      </description>
    </attribute>
    <attribute>
      <name>ondblclick</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          double clicked over this element.
      </description>
    </attribute>
    <attribute>
      <name>onfocus</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element receives focus.
      </description>
    </attribute>
    <attribute>
      <name>onkeydown</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          pressed down over this element.
      </description>
    </attribute>
    <attribute>
      <name>onkeypress</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          pressed and released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onkeyup</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onmousedown</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          pressed down over this element.
      </description>
    </attribute>
    <attribute>
      <name>onmousemove</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved within this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseout</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved away from this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseover</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved onto this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseup</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onselect</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when text within this
          element is selected by the user.
      </description>
    </attribute>
    <attribute>
      <name>readonly</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
      </description>
    </attribute>
    <attribute>
      <name>size</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The number of characters used to determine
          the width of this field.
      </description>
    </attribute>
    <attribute>
      <name>style</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style(s) to be applied when this component is rendered.
      </description>
    </attribute>
    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Space-separated list of CSS style class(es) to be applied when
          this element is rendered.  This value must be passed through
          as the "class" attribute on generated markup.
      </description>
    </attribute>
    <attribute>
      <name>tabindex</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
      </description>
    </attribute>
    <attribute>
      <name>title</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Advisory title information about markup elements generated
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         The value binding expression linking this component to a property in a backing bean
      </description>
    </attribute>
  </tag>
  
<tag>
    <name>message</name>
    <tag-class>com.sun.faces.taglib.html_basic.MessageTag</tag-class>
    <tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
    <body-content>JSP</body-content>
    <description>
      <![CDATA[<p>Render a single message for a specific component.</p><p>Set-up for Rendering</p><ul><p>Obtain the "summary" and "detail" properties from<code>UIMessage</code> component.  If not present, keep the
        empty string as the value, respectively.  Obtain the first<code>FacesMessage</code> to render from the component, using
        the "for" property of the <code>UIMessage</code>.  This will be
        the only message we render.  Obtain the severity style for this
        message.  If the severity of the message is<code>FacesMessage.SEVERITY_INFO</code>, the severity style
        comes from the value of the "infoStyle" attribute.  If the
        severity of the message is<code>FacesMessage.SEVERITY_WARN</code>, the severity style
        comes from the value of the "warnStyle" attribute, and so on for
        each of the severities, <code>INFO, WARN, ERROR</code> and<code>FATAL</code>.  The same rules apply for obtaining the
        severity style class, but instead of "infoStyle, warnStyle", etc
        use "infoClass, warnClass", etc.  Obtain the "style",
        "styleClass" and "layout" attributes from the<code>UIMessage</code> component.  If we have a "style"
        attribute and a severity style attribute, use the severity style
        attribute as the value of the "style" attribute.  If we have no
        "style" attribute, but do have a severity style, use the
        severity style as the value of the "style" attribute.  The same
        precedence rules apply for the style class.</p></ul><p>Rendering</p><ul><p>For the message renderer, we only render
      one row, for the first message.  For the messages renderer, we
      render as many rows as we have messages.  If either of the "style"
      or "styleClass" attributes has a non-null value (as determined
      above), render a "span" element, outputting the value of the
      "style" attribute as the the value of the "style" attribute, and
      outputting the value of the "styleClass" attribute as the value of
      the "class" attribute on the "span" element.  If the<code>UIMessage</code> has a "tooltip" attribute with the value of
      "true", and the <code>UIMessage</code> has "showSummary" and
      "showDetail" properties with the value "true", if we haven't
      already written out the "span", output the "summary" as the value
      of the "title" attribute on the "span".  If we haven't already
      written out a "title" attribute, and "showSummary" is true, output
      the summary.  If "showDetail" is true, output the detail.  Close
      out the span if necessary.</p></ul>]]>
    </description>
    <attribute>
      <name>for</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      
          Client identifier of the component for which to display messages.
      </description>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The component identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
      </description>
    </attribute>
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
      </description>
    </attribute>
    <attribute>
      <name>showDetail</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating whether the summary portion of displayed messages
          should be included.  Default value is "true".
      </description>
    </attribute>
    <attribute>
      <name>showSummary</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating whether the summary portion of displayed messages
          should be included.  Default value is "false".
      </description>
    </attribute>
    <attribute>
      <name>errorClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style class to apply to any message
          with a severity class of "ERROR".
      </description>
    </attribute>
    <attribute>
      <name>errorStyle</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style(s) to apply to any message
          with a severity class of "ERROR".
      </description>
    </attribute>
    <attribute>
      <name>fatalClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style class to apply to any message
          with a severity class of "FATAL".
      </description>
    </attribute>
    <attribute>
      <name>fatalStyle</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style(s) to apply to any message
          with a severity class of "FATAL".
      </description>
    </attribute>
    <attribute>
      <name>infoClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style class to apply to any message
          with a severity class of "INFO".
      </description>
    </attribute>
    <attribute>
      <name>infoStyle</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style(s) to apply to any message
          with a severity class of "INFO".
      </description>
    </attribute>
    <attribute>
      <name>style</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style(s) to be applied when this component is rendered.
      </description>
    </attribute>
    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Space-separated list of CSS style class(es) to be applied when
          this element is rendered.  This value must be passed through
          as the "class" attribute on generated markup.
      </description>
    </attribute>
    <attribute>
      <name>title</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Advisory title information about markup elements generated
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>tooltip</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating whether the detail portion of the
          message should be displayed as a tooltip.
      </description>
    </attribute>
    <attribute>
      <name>warnClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style class to apply to any message
          with a severity class of "WARN".
      </description>
    </attribute>
    <attribute>
      <name>warnStyle</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style(s) to apply to any message
          with a severity class of "WARN".
      </description>
    </attribute>
    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         The value binding expression linking this component to a property in a backing bean
      </description>
    </attribute>
  </tag>
<tag>
    <name>outputLabel</name>
    <tag-class>com.sun.faces.taglib.html_basic.OutputLabelTag</tag-class>
    <tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
    <body-content>JSP</body-content>
    <description>
      Renders an HTML "label" element.  Render the current value 
      of the component as label text if it is specified. If a "for" attribute is 
      specified, find the component specified by the value of the "for" 
      attribute, and render its client id as the value of the "for" attribute.  
      If "styleClass" attribute is specified, render its value as the value
      of the "class" attribute.
    </description>
    <attribute>
      <name>converter</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Converter instance registered with this component.
      </description>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The component identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
      </description>
    </attribute>
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
      </description>
    </attribute>
    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The current value of this component.
      </description>
    </attribute>
    <attribute>
      <name>accesskey</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Access key that, when pressed, transfers focus
          to this element.
      </description>
    </attribute>
    <attribute>
      <name>dir</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Direction indication for text that does not inherit directionality.
          Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).
      </description>
    </attribute>
    <attribute>
      <name>for</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      
        Client identifier of the component for which this element
        is a label.
      </description>
    </attribute>
    <attribute>
      <name>lang</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Code describing the language used in the generated markup
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>onblur</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element loses focus.
      </description>
    </attribute>
    <attribute>
      <name>onclick</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          clicked over this element.
      </description>
    </attribute>
    <attribute>
      <name>ondblclick</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          double clicked over this element.
      </description>
    </attribute>
    <attribute>
      <name>onfocus</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element receives focus.
      </description>
    </attribute>
    <attribute>
      <name>onkeydown</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          pressed down over this element.
      </description>
    </attribute>
    <attribute>
      <name>onkeypress</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          pressed and released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onkeyup</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onmousedown</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          pressed down over this element.
      </description>
    </attribute>
    <attribute>
      <name>onmousemove</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved within this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseout</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved away from this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseover</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved onto this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseup</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          released over this element.
      </description>
    </attribute>
    <attribute>
      <name>style</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style(s) to be applied when this component is rendered.
      </description>
    </attribute>
    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Space-separated list of CSS style class(es) to be applied when
          this element is rendered.  This value must be passed through
          as the "class" attribute on generated markup.
      </description>
    </attribute>
    <attribute>
      <name>tabindex</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
      </description>
    </attribute>
    <attribute>
      <name>title</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Advisory title information about markup elements generated
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         The value binding expression linking this component to a property in a backing bean
      </description>
    </attribute>
  </tag>

  <tag>

    <name>subview</name>
    <tag-class>com.sun.faces.taglib.jsf_core.SubviewTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Container action for all JavaServer Faces core and
      custom component actions used on a nested page via
      "jsp:include" or any custom action that dynamically
      includes another page from the same web application,
      such as JSTL's "c:import".
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to a backing bean
        property bound to the component instance for
        the UIComponent created by this custom action.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Component identifier of the UINamingContainer
        component to be created.
      </description>
    </attribute>

    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Flag indicating whether this component (and its
        children) should be rendered.  Expressions must
        evaluate to a boolean.
      </description>
    </attribute>

  </tag>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
    <tag>
    <name>inputSecret</name>
    <tag-class>com.sun.faces.taglib.html_basic.InputSecretTag</tag-class>
    <tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
    <body-content>JSP</body-content>
    <description>
      <![CDATA[<p>Renders an HTML "input" element of "type" "password".</p><p>Decode Behavior</p><ul><p>See the decode description for the <a href="javax.faces.Inputjavax.faces.Text.html#encode">Input
      Text</a> renderer.</p></ul><p>Encode Behavior</p><ul><p>
      Render the clientId of the component as the value of the "name"
      attribute.  Render the current value of the component as the value
      of the "value" attribute, if and only if the "redisplay" component
      attribute is the string "true".  If the "styleClass" attribute is
      specified, render its value as the value of the "class"
      attribute.</p></ul>]]>
    </description>
    <attribute>
      <name>converter</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Converter instance registered with this component.
      </description>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      
          The component identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
      </description>
    </attribute>
    <attribute>
      <name>immediate</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
      </description>
    </attribute>
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
      </description>
    </attribute>
    <attribute>
      <name>required</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that the user is required to provide a submitted
          value for this input component.
      </description>
    </attribute>
    <attribute>
      <name>validator</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          MethodBinding representing a validator method that will be called
          during Process Validations to perform correctness checks on the
          value of this component.  The expression must evaluate to a public
          method that takes FacesContext, UIComponent, and Object parameters,
          with a return type of void.
      </description>
    </attribute>
    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      
          The current value of this component.
      </description>
    </attribute>
    <attribute>
      <name>valueChangeListener</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          MethodBinding representing a value change listener method that will be
          notified when a new value has been set for this input component.  The
          expression must evaluate to a public method that takes a
          ValueChangeEvent parameter, with a return type of void.
      </description>
    </attribute>
    <attribute>
      <name>accesskey</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Access key that, when pressed, transfers focus
          to this element.
      </description>
    </attribute>
    <attribute>
      <name>alt</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Alternate textual description of the
          element rendered by this component.
      </description>
    </attribute>
    <attribute>
      <name>dir</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Direction indication for text that does not inherit directionality.
          Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).
      </description>
    </attribute>
    <attribute>
      <name>disabled</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that this element must never
          receive focus or be included in a subsequent
          submit.
      </description>
    </attribute>
    <attribute>
      <name>lang</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Code describing the language used in the generated markup
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>maxlength</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The maximum number of characters that may
          be entered in this field.
      </description>
    </attribute>
    <attribute>
      <name>onblur</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element loses focus.
      </description>
    </attribute>
    <attribute>
      <name>onchange</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element loses focus
          and its value has been modified since gaining focus.
      </description>
    </attribute>
    <attribute>
      <name>onclick</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          clicked over this element.
      </description>
    </attribute>
    <attribute>
      <name>ondblclick</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          double clicked over this element.
      </description>
    </attribute>
    <attribute>
      <name>onfocus</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element receives focus.
      </description>
    </attribute>
    <attribute>
      <name>onkeydown</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          pressed down over this element.
      </description>
    </attribute>
    <attribute>
      <name>onkeypress</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          pressed and released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onkeyup</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onmousedown</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          pressed down over this element.
      </description>
    </attribute>
    <attribute>
      <name>onmousemove</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved within this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseout</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved away from this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseover</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved onto this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseup</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onselect</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when text within this
          element is selected by the user.
      </description>
    </attribute>
    <attribute>
      <name>readonly</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
      </description>
    </attribute>
    <attribute>
      <name>redisplay</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
        Flag indicating that any existing value
        in this field should be rendered when the
        form is created.  Because this is a potential
        security risk, password values are not
        displayed by default.
      </description>
    </attribute>
    <attribute>
      <name>size</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The number of characters used to determine
          the width of this field.
      </description>
    </attribute>
    <attribute>
      <name>style</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style(s) to be applied when this component is rendered.
      </description>
    </attribute>
    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Space-separated list of CSS style class(es) to be applied when
          this element is rendered.  This value must be passed through
          as the "class" attribute on generated markup.
      </description>
    </attribute>
    <attribute>
      <name>tabindex</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
      </description>
    </attribute>
    <attribute>
      <name>title</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Advisory title information about markup elements generated
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         The value binding expression linking this component to a property in a backing bean
      </description>
    </attribute>
  </tag>
  
  
  
  
</taglib>