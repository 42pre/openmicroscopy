<project name="webadmin" default="main" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<property environment="env" />
	<property file="./build.properties" />

	<!-- Ivy configuration -->
	<property name="deps.lib.dir" value="${basedir}/WEB-INF/lib" />
	<property name="import.dir" value="${basedir}/../../antlib/resources" />
	<import file="${import.dir}/global.xml" />
	<import file="${import.dir}/lifecycle.xml" />
	<import file="${import.dir}/dependencies.xml" />

	<property name="build.compiler" value="modern" />
	<property name="build.dir" value="${basedir}/WEB-INF/classes" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="target.dir" value="${basedir}/target" />
	<property name="war.file" value="WebAdmin" />
	<property name="war.file.name" value="${war.file}.war" />
	<property name="jboss.home" value="${env.JBOSS_HOME}" />   
	<property name="jboss.server.config" value="default" />
	<property name="jboss.deploy.dir" value="${jboss.home}/server/${jboss.server.config}/deploy" />
	
	<!-- findbugs overrides -->
	<property name="findbugs.path"   value="project.jars"/>
	<property name="findbugs.target" value="${basedir}/WebAdmin.war"/>

	<path id="project.jars">
		<fileset dir="${basedir}/WEB-INF/lib/">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="project.class.path">
		<path refid="project.jars"/>
		<fileset dir="${basedir}/WEB-INF">
			<include name="**/*.properties" />
		</fileset>
		<fileset dir="${basedir}">
			<include name="**/*.properties" />
		</fileset>
		<pathelement path="${src.dir}" />
	</path>

	<target name="clean">
		<delete dir="${build.dir}" includeEmptyDirs="true" />
		<delete dir="${basedir}/target" includeEmptyDirs="true" />
		<delete>
			<fileset dir="${basedir}/WEB-INF/" includes="lib/**/*.jar" />
		</delete>
	</target>

	<!-- Here we cannot use deps-retrieve directly because the sync=true property
	deletes lib/.svn -->
	<target name="compile" depends="deps-configure">
		<makeDirectories/>
    		<ivy:retrieve pattern="${basedir}/WEB-INF/lib/[artifact].[ext]" log="quiet" sync="false" symlink="true"/>
		<mkdir dir="${basedir}/WEB-INF/classes" />
		<myjavac classpathref="project.class.path" destdir="${build.dir}">
			<include name="**/*.java" />
			<src path="${src.dir}"/>
		</myjavac>
		<copy todir="${build.dir}/ome/admin/bundle">
			<fileset dir="${src.dir}/ome/admin/bundle" includes="**/*.properties" />
		</copy>
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}" includes="**/*.properties" />
		</copy>
	    <copy todir="${build.dir}">
			<fileset dir="${target.dir}/generated/resources" includes="omero.properties" />
		</copy>	
	</target>

	<target name="cleanWebApp">
		<delete file="${jboss.deploy.dir}/${war.file.name}" />
		<delete dir="${jboss.deploy.dir}/${war.file}" includeEmptyDirs="true" />
	</target>

	<target name="war" depends="compile">
		<war warfile="${war.file.name}" webxml="${basedir}/WEB-INF/web.xml">
			<fileset dir="${basedir}" includes="**/*.*" excludes="*.war, **/*.java, *.xml, src/**/*, target/**/*, **/*.nbattrs, web.xml, **/WEB-INF/**/*.*, **/*.classpath" />
			<webinf dir="${basedir}/WEB-INF" includes="**/* **/*.class" excludes="web.xml, **/*.jar, **/*.class" />
			<lib dir="${basedir}/WEB-INF/lib" excludes="jboss-annotation-ejb3.jar,jboss-ejb3x.jar,jboss-ejb3.jar,jboss-j2ee.jar,jboss-servlet-api.jar,ant.jar,antlr.jar,checkstyle.jar,dsl.jar,emma_ant.jar,emma.jar,findbugs-ant.jar,freemarker.jar,groovy.jar,hibernate-annotations.jar,hibernate-commons-annotations.jar,hibernate-search.jar,hibernate-tools.jar,hibernate-validator.jar,jakarta-oro.jar,jamon.jar,jmock.jar,jtidy.jar,lucene-core.jar,persistence-api.jar,postgresql.jar,spring-test.jar,testing.jar,testng.jar,velocity-tools-generic.jar,velocity.jar,   jdom.jar,jaxen.jar,htmlunit.jar,junit.jar,xom.jar,xmlParserAPIs.jar,xml-apis.jar,xercesImpl.jar,servlet-api.jar,regexp.jar,nekohtml.jar,jwebunit-htmlunit-plugin.jar,jwebunit-core.jar,js.jar" />
			<classes dir="${basedir}/WEB-INF/classes" />
		</war>
	</target>

	<target name="deploy">
		<copy todir="${jboss.deploy.dir}">
			<fileset dir="${basedir}" includes="${war.file.name}" />
		</copy>
	</target>

	<target name="main" depends="clean, cleanWebApp, compile, war, deploy" />

	<target name="tools-build" depends="war" description="Tools build hook: runs war" />

	<target name="tools-dist" depends="tools-build" description="Tools dist hook: copies war to tools/target">
		<copy todir="../target">
			<fileset dir="${basedir}" includes="*.war" />
		</copy>
	</target>

	<target name="tools-clean" depends="clean">
		<delete dir="target" />
		<delete file="${war.file.name}" />
	</target>

</project>
