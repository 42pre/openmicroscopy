<?xml version="1.0" encoding="utf-8"?>
<project name="licenses" default="install" basedir=".">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
#
# Copyright 2007 Glencoe Software, Inc. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore, josh at glencoesoftware.com
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-->
	<description>
	Add-on to the OMERO code base which allows custom implementations
	of a LicenseStore which regulates access to the server based on 
	License tokens. 
	</description>    
	
	<property name="main.class" value="ome.services.licenses.tasks.Run"/>
	<property name="uses.ice" value="true"/>
	<property name="classpath.file" value="classpath.xml"/>
	<dirname property="up-two" file="${basedir}"/>
	<dirname property="up-one" file="${up-two}"/>
	<import file="${classpath.file}"/>

	<!-- The hard-wiring allows a specific Store implementation to
	be hard-wired into the LicenseBean.

	The value is the class names of a LicenseStore implementation with a 
	a no-arg constructor. This allows classes unknown to the server at 
	compile time to become a part of a distribution. -->
	<target name="compile" depends="generate" unless="skip.compile">
		<hardWireCompile pattern="ome/services/licenses/LicenseBean"
		   token="&quot;ome.services.licenses.Store&quot;"
		   value="${ome.services.licenses.Store_class}"/>
	</target>

	<!-- Additional functionality for the lifecycle.package target.
	Unjars the final contents of the service jar to a top-level tools/
	directory so that they can be bundled together for the final EAR.
	This is necessary since otherwise the jar listed here would have to
	be manually added to app/resources/application.xml -->
	<target name="package" depends="lifecycle.package" unless="skip.compile">
	        <unjar src="${target.dir}/${artifact.final.name}" dest="${tools.unjar}"/>
	</target>

	<!-- Additional functionality for the lifecycle.install target.
	Copies the jar to ${tools.jars} for later copying into dist/client. -->
	<target name="install" depends="lifecycle.install">
	        <copy file="${target.dir}/${artifact.final.name}" todir="${tools.jars}"/>
	</target>

</project>
