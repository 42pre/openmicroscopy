<?xml version="1.0" encoding="utf-8"?>
<project name="licenses" default="install" basedir=".">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
#
# Copyright 2007 Glencoe Software, Inc. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore, josh at glencoesoftware.com
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-->
	<description>
	Add-on to the OMERO code base which allows custom implementations
	of a LicenseStore which regulates access to the server based on 
	License tokens. 
	</description>    
	
	<property name="main.class" value="ome.services.licenses.tasks.Run"/>
	<property name="uses.ice" value="true"/>
	<property name="classpath.file" value="classpath.xml"/>
	<dirname property="up-two" file="${basedir}"/>
	<dirname property="up-one" file="${up-two}"/>
	<import file="${classpath.file}"/>

    <import file="../make.xml"/>

	<!-- The hard-wiring allows a specific Store implementation to
	be hard-wired into the LicenseBean.

	The value is the class names of a LicenseStore implementation with a 
	a no-arg constructor. This allows classes unknown to the server at 
	compile time to become a part of a distribution. -->
	<target name="compile" depends="generate" unless="skip.compile">
		<hardWireCompile pattern="ome/services/licenses/LicenseBean"
		   token="&quot;ome.services.licenses.Store&quot;"
		   value="${ome.services.licenses.Store_class}"/>
	</target>

    <target name="tools-build" depends="package" description="Creates all artifacts for tools/target">
        <make/>
    </target>

    <!-- Additional functionality for the lifecycle.package target.
    Unjars the final contents of the service jar to a tools/target
    directory so that they can be bundled together for the final products.
    This is necessary since otherwise the jar listed here would have to
    be manually added to app/resources/application.xml -->
    <target name="tools-dist" description="Copied artifacts to tools/target">
        <mkdir dir="${tools.classes}"/>
        <unjar src="${target.dir}/${artifact.final.name}" dest="${tools.classes}"/>
        <copy todir="../target/client">
            <fileset dir="${target.dir}" includes="${artifact.final.name}"/>
        </copy>
        <copy todir="../target/include">
            <fileset dir="${resrc.dir}" includes="**/*.ice,**/*.h"/>
            <fileset dir="src/slice_generated" includes="**/*.h"/>
            <fileset dir="src" includes="**/*.h" excludes="**/slice_generated/**/*"/>
        </copy>
        <make-copy/>
    </target>

    <target name="clean" depends="lifecycle.clean">
        <make-clean/>
    </target>

</project>
