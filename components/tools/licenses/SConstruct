#
#   Copyright 2008 Glencoe Software, Inc. All rights reserved.
#   Use is subject to license terms supplied in LICENSE.txt
#

import sys, os
blitz = os.path.abspath( os.path.join(os.path.curdir, os.path.pardir, os.path.pardir, "blitz") )
sys.path.append( blitz )
from blitz_tools import *

env = OmeroEnvironment()
env.Repository("generated", "resources")
env.Append(CPPPATH=["generated",tools_include])

#
# Defining licenses version of DEPMAP.
#
env["DEPMAP"] = {
    "omero/LicensesAPI.java" : "omero/licenses/ILicense.java",
}

#
# Redefining the common method
#
orig_common = common
def common(dir = generated):
    orig = orig_common(dir)
    return "-I%s -I%s" % (blitz_resources, blitz_generated)  + orig
import blitz_tools
blitz_tools.common = common

#
# Call slice2java, slice2cpp, and slice2py
#

actions = []
for m in methods:
    for w in where:
        for d in directories:
            action = m(env, w, d)
            actions.extend( action )

env.Alias("slice", actions)

#
# Build library
#
lib = env.SharedLibrary("omero_licenses",
    ["omero/LicensesAPI.cpp"],
    LIBS=["omero_client","Ice","Glacier2","IceUtil"])

env.Alias("lib", lib)
env.Depends(lib, "slice")

install = env.Install('../target/lib', lib)
env.Alias('install', install)
