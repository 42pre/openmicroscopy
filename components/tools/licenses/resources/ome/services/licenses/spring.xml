<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 
# $Id: spring.xml 1167 2006-12-15 10:39:34Z jmoore $
# 
# Copyright 2006 University of Dundee. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--

  Configuration of licensed client proxies. This file was copied from 
  client/resources/ome/client/spring.xml See that file for more info.

  Changes of importance:
  * ome.system.Principal ==> ome.services.licenses.LicensedPrincipal
  * Addition of ILicense proxy.  
-->

<beans>	

  <!-- property placeholder post-processor -->
	<bean id="placeholderConfig"
              class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_FALLBACK"/>
		<property name="ignoreResourceNotFound" value="true"/>
		<property name="localOverride" value="true"/>
		<property name="properties" ref="properties"/>
		<property name="locations">
		<list>
			<value>classpath:omero.properties</value>
 			<value>classpath:hibernate.properties</value>      
 			<value>classpath:jndi.properties</value>
 			<value>classpath:local.properties</value>
		</list>
		</property>
	</bean>
	
  <!-- properly configured principal for login -->
	<bean id="principal" class="ome.services.licenses.LicensedPrincipal">
		<constructor-arg index="0" value="${omero.user}"/>
		<constructor-arg index="1" value="${omero.group}"/>    
		<constructor-arg index="2" value="${omero.event}"/>        
	</bean>

  <!-- hashtable for InitialContext constructor -->
  <bean id="env" class="java.util.Hashtable">
    <constructor-arg>
      <map>
        <entry key="java.naming.security.principal" value-ref="principal"/>
        <entry key="java.naming.security.credentials" value="${omero.pass}"/>
        <entry key="java.naming.factory.initial" value="${java.naming.factory.initial}"/>
        <entry key="java.naming.factory.url.pkgs" value="${java.naming.factory.url.pkgs}"/>
        <entry key="java.naming.provider.url" value="${server.host}:${server.port}"/>
      </map>
    </constructor-arg>
  </bean>
    
  <!-- jndi parent class -->
  <bean id="statelessJndi" abstract="true"
    class="ome.client.ConfigurableJndiObjectFactoryBean">
    <property name="jndiEnvironment" ref="env"/>
    <property name="lookupOnStartup" value="false"/>    
    <property name="principal"       ref="principal"/>
    <property name="credentials"     value="${omero.pass}"/>
  </bean>
  <bean id="statefulJndi" abstract="true" parent="statelessJndi"
    class="ome.client.ConfigurableJndiObjectFactoryBean">
    <property name="stateful" value="true"/>
  </bean>
    		
  <!--
      STATELESS SERVICES
  -->
  <bean id="managed:ome.api.IAdmin" parent="statelessJndi">
    <property name="jndiName" value="omero/remote/ome.api.IAdmin"/>
    <property name="proxyInterface" value="ome.api.IAdmin"/>
  </bean>    
    
  <bean id="managed:ome.api.IAnalysis" parent="statelessJndi">
    <property name="jndiName" value="omero/remote/ome.api.IAnalysis"/>
    <property name="proxyInterface" value="ome.api.IAnalysis"/>
  </bean>

  <bean id="managed:ome.api.IConfig" parent="statelessJndi">
    <property name="jndiName" value="omero/remote/ome.api.IConfig"/>
    <property name="proxyInterface" value="ome.api.IConfig"/>
  </bean>

  <bean id="managed:ome.api.IPixels" parent="statelessJndi">
    <property name="jndiName" value="omero/remote/ome.api.IPixels"/>
    <property name="proxyInterface" value="ome.api.IPixels"/>
  </bean>

  <bean id="managed:ome.api.IPojos" parent="statelessJndi">
    <property name="jndiName" value="omero/remote/ome.api.IPojos"/>
    <property name="proxyInterface" value="ome.api.IPojos"/>
  </bean>

  <bean id="managed:ome.api.IQuery" parent="statelessJndi">
    <property name="jndiName" value="omero/remote/ome.api.IQuery"/>
    <property name="proxyInterface" value="ome.api.IQuery"/>
  </bean>

  <bean id="managed:ome.api.ITypes" parent="statelessJndi">
    <property name="jndiName" value="omero/remote/ome.api.ITypes"/>
    <property name="proxyInterface" value="ome.api.ITypes"/>
  </bean>

  <bean id="managed:ome.api.IUpdate" parent="statelessJndi">
    <property name="jndiName" value="omero/remote/ome.api.IUpdate"/>
    <property name="proxyInterface" value="ome.api.IUpdate"/>
  </bean>

  <bean id="managed:ome.services.licenses.ILicense" parent="statelessJndi">
    <property name="jndiName" value="omero/remote/ome.services.licenses.ILicense"/>
    <property name="proxyInterface" value="ome.services.licenses.ILicense"/>
  </bean>

  <!--
      STATEFUL SERVICES
  -->

  <bean id="managed:ome.api.RawFileStore" parent="statefulJndi">
    <property name="jndiName" value="omero/remote/ome.api.RawFileStore"/>
    <property name="proxyInterface" value="ome.api.RawFileStore"/>
  </bean>
  
  <bean id="managed:ome.api.RawPixelsStore" parent="statefulJndi">
    <property name="jndiName" value="omero/remote/ome.api.RawPixelsStore"/>
    <property name="proxyInterface" value="ome.api.RawPixelsStore"/>
  </bean>
    
  <bean id="managed:omeis.providers.re.RenderingEngine" parent="statefulJndi">
    <property name="jndiName" value="omero/remote/omeis.providers.re.RenderingEngine"/>
    <property name="proxyInterface" value="omeis.providers.re.RenderingEngine"/>
  </bean>

  <bean id="managed:ome.api.ThumbnailStore" parent="statefulJndi">
    <property name="jndiName" value="omero/remote/ome.api.ThumbnailStore"/>
    <property name="proxyInterface" value="ome.api.ThumbnailStore"/>
  </bean>
</beans>
