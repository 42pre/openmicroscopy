<?xml version="1.0" encoding="utf-8"?>
<project name="multiproject" default="usage" basedir=".">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
# 
# Copyright 2006 University of Dundee. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
# 
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  DOCUMENTATION:
  =================================================

	  The idea for these targets is taken from maven2 and is
	  supported by the ${import.dir}/lifecycle.xml ant script.
	  Unlike most other targets which can be called from anywhere,
	  these targets can only be called from the top-level because
	  they mask the lifecycle.xml target definitions.

-->

	<macrodef name="iterate">
		<attribute name="target"/>
		<sequential>
		<iter><target name="@{target}"/></iter>
		</sequential>
	</macrodef>

	<macrodef name="iter">
		<element name="elem" implicit="yes"/>
		<attribute name="inheritAll" default="false"/>
		<attribute name="inheritRefs" default="false"/>
		<attribute name="file" default="build.xml"/>
		<sequential>
		<antRun component="dsl"       file="@{file}" inheritAll="@{inheritAll}" inheritRefs="@{inheritRefs}"><elem/> </antRun>
		<antRun component="common"    file="@{file}" inheritAll="@{inheritAll}" inheritRefs="@{inheritRefs}"><elem/> </antRun>
		<antRun component="romio"     file="@{file}" inheritAll="@{inheritAll}" inheritRefs="@{inheritRefs}"><elem/> </antRun>
		<antRun component="rendering" file="@{file}" inheritAll="@{inheritAll}" inheritRefs="@{inheritRefs}"><elem/> </antRun>
		<antRun component="importer"  file="@{file}" inheritAll="@{inheritAll}" inheritRefs="@{inheritRefs}"><elem/> </antRun>
		<antRun component="server"    file="@{file}" inheritAll="@{inheritAll}" inheritRefs="@{inheritRefs}"><elem/> </antRun>
		<antRun component="client"    file="@{file}" inheritAll="@{inheritAll}" inheritRefs="@{inheritRefs}"><elem/> </antRun>
		<antRun component="bioformats-omero"    file="@{file}" inheritAll="@{inheritAll}" inheritRefs="@{inheritRefs}"><elem/> </antRun>
		<!-- These are our final products, and should be run last -->
		<antRun component="blitz"     file="@{file}" inheritAll="@{inheritAll}" inheritRefs="@{inheritRefs}"><elem/> </antRun>
		<antRun component="app"       file="@{file}" inheritAll="@{inheritAll}" inheritRefs="@{inheritRefs}"><elem/> </antRun>
		</sequential>
	</macrodef>

	<macrodef name="antRun">
		<attribute name="file" default="build.xml"/>
		<attribute name="component"/>
		<attribute name="inheritAll" default="false"/>
		<attribute name="inheritRefs" default="false"/>
		<element name="targets" implicit="yes"/>
		<sequential>
		<echo> +===========================================================================================+ </echo>
		<echo> |                                                                                             </echo>
		<echo> |                                      @{component}                                           </echo>
		<echo> |                                                                                             </echo>
		<echo> +===========================================================================================+ </echo>
		<ant dir="${components.dir}/@{component}" antfile="@{file}" inheritAll="@{inheritAll}" inheritRefs="@{inheritRefs}">
			<property name="current.component" value="@{component}"/>
			<property name="multi.test.with.fail" value="${test.with.fail}"/>
			<property name="multi.test.skip" value="${test.skip}"/>
			<property name="multi.generate.skip" value="${generate.skip}"/>
			<property name="multi.checks.skip" value="${checks.skip}"/>
			<property name="classpath.file" value="${classpath.file}"/>
			<targets/>
		</ant>
		</sequential>
	</macrodef>

	<target name="multiproject" depends="compatibility,init"/>

	<target name="multi" depends="multiproject"
		description="Convenience target. Iterates over all components calling the $${defaultTarget} method (default=${defaultTarget}">
		<iterate target="${defaultTarget}"/>
	</target>

	<target name="prepare" depends="multiproject"
		description="Lifecycle target: calls 'prepare' on all components">
		<iterate target="prepare"/>
	</target>

	<target name="generate" depends="multiproject"
		description="Lifecycle target: calls 'generate' on all components">
		<iterate target="generate"/>
	</target>

	<target name="compile" depends="multiproject"
		description="Lifecycle target: calls 'compile' on all components">
		<iterate target="compile"/>
	</target>

	<target name="test" depends="multiproject"
		description="Lifecycle target: calls 'test' on all components">
		<iterate target="test"/>
	</target>

	<target name="package" depends="multiproject"
		description="Lifecycle target: calls 'package' on all components">
		<iterate target="package"/>
	</target>

	<target name="install" depends="multiproject"
		description="Lifecycle target: calls 'install' on all components">
		<iterate target="install"/>
	</target>

	<target name="integration" depends="multiproject"
		description="Lifecycle target: calls 'integration' on all components">
		<iterate target="integration"/>
	</target>

</project>
