<?xml version="1.0" encoding="utf-8"?>
<project name="directories" basedir="." default="">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# Copyright (C) 2005 Open Microscopy Environment
#       Massachusetts Institue of Technology,
#       National Institutes of Health,
#       University of Dundee    
#                       
#               
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation; either
#    version 2.1 of the License, or (at your option) any later
#    version.           
#                       
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#       
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free
#    Software           
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
#    02111-1307  USA
#       
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
  DOCUMENTATION:
  ==============================================================================
  Provides the locations of all build related elements. Concrete
  (hard-coded) paths should be avoided at all costs

-->

	<!-- Setup: needed calculations for other paths -->
	<dirname property="import.dir"     file="${ant.file.directories}"/>
	<dirname property="antlib.dir"     file="${import.dir}"/>
	<dirname property="components.dir" file="${antlib.dir}"/>
	<dirname property="root.dir"       file="${components.dir}"/>

	<!-- Absolute paths: same for all components -->
	<property name="omero.home" value="${root.dir}"/>
	<property name="lib.dir"    value="${root.dir}/lib" />
	<property name="tools.dir"  value="${root.dir}/lib/tools" />
	<property name="dist.dir"   value="${root.dir}/dist" />
	
	<!-- Components -->
	<property name="dsl.comp"       value="${components.dir}/dsl"/>
	<property name="common.comp"    value="${components.dir}/common"/>
	<property name="server.comp"    value="${components.dir}/server"/>
	<property name="nio.comp"       value="${components.dir}/omeio-nio"/>
	<property name="render.comp" value="${components.dir}/rendering"/>
	
	<!-- Relative paths -->
	<property name="target.rel"    value="target"/>
	<property name="classes.rel"   value="${target.rel}/classes"/>
	<property name="generated.rel" value="${target.rel}/generated"/>	
	<property name="testclasses.rel" value="${target.rel}/test-classes"/>
	<property name="testreports.rel" value="${target.rel}/reports"/>
		
	<!-- Directories relative to basedir: different for each component -->
	<property name="src.dir"         value="${basedir}/src" />
	<property name="resrc.dir"       value="${basedir}/resources"/>
	<property name="test.dir"        value="${basedir}/test"/>

	<!-- Target destinations for generated code-->
	<property name="target.dir"      value="${basedir}/${target.rel}" />
	<property name="generated.dir"   value="${basedir}/${generated.rel}"/>
	<property name="classes.dir"     value="${basedir}/${classes.rel}"/>
	<property name="testclasses.dir" value="${basedir}/${testclasses.rel}"/>
	<property name="testreports.dir" value="${basedir}/${testreports.rel}"/>
	<property name="src.dest"        value="${generated.dir}/src" />
	<property name="resrc.dest"      value="${generated.dir}/resources"/>
	<property name="done.dir"        value="${generated.dir}/.done"/>

	<!-- Files relative to basedir: different for each component -->
	<property name="hibernate.properties" value="${resrc.dest}/hibernate.properties"/>

	<path id="source.path">
		<fileset dir="${src.dir}">
			<include name="**/*.java"/>
			<exclude name="**/.svn"/>
		</fileset>
		<fileset dir="${src.dest}">
			<include name="**/*.java"/>
		</fileset>
	</path>

	<macrodef name="copyResourceDir">
		<attribute name="todir"/>
		<attribute name="fromdir"/>
		<sequential>
		<copy todir="@{todir}">
		<fileset dir="@{fromdir}">
			<include name="**/*.properties"/>
			<include name="**/*.vm"/>
			<include name="**/*.xml"/>
			<exclude name="**/.svn"/>
		</fileset>
		</copy>
		</sequential>
	</macrodef>

	<macrodef name="copyResources">
		<sequential>
		<copyResourceDir todir="${classes.dir}" fromdir="${resrc.dir}"/>
		<copyResourceDir todir="${classes.dir}" fromdir="${resrc.dest}"/>
		</sequential>
	</macrodef>
		
	<macrodef name="copyTestResources">
		<sequential>
		<copyResourceDir todir="${testclasses.dir}" fromdir="${test.dir}"/>
		</sequential>
	</macrodef>
		
	<macrodef name="makeDirectories">
		<sequential>
		<mkdir dir="${target.dir}" />
		<mkdir dir="${done.dir}" />
		<mkdir dir="${src.dest}" />
		<mkdir dir="${resrc.dest}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${testclasses.dir}" />
		<mkdir dir="${testreports.dir}" />
		</sequential>
	</macrodef>

</project>
