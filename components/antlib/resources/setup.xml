<?xml version="1.0" encoding="utf-8"?>
<project name="setup" default="Usage" basedir=".">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
# 
# Copyright 2006 University of Dundee. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
# 
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
  DOCUMENTATION:
  ==============================================================================
  These targets are intended to check the build environment and to
  help put it in a valid state for running the build.
    
-->

	<!-- 	===============================================
		SETUP
	==================================================  -->
	<target name="setup" 
		depends="configure,check-system"
		description="Prepares code base for compilation"/>
		
	<target name="warning">
		<input
			message="${msg.setup.warning}"
			validargs="y,n"
			addproperty="do.abort"/>

  		<fail>
			<condition>
				<equals arg1="y" arg2="${do.abort}"/>
			</condition>
			${msg.setup.aborted}
		</fail>
	</target>

	<target name="checkout-omero">
		<svn command="co ${subversion.url}"/>
	</target>

	<target name="update-omero">
		<svn command="up"/>
	</target>

	<macrodef name="skip">
		<attribute name="prop"/>
		<sequential>
		<condition property="config_@{prop}" value="${@{prop}}">
			<and><isset property="@{prop}"/><isset property="config.skip"/></and>
		</condition>
		</sequential>
	</macrodef>

	<property name="omero.user" value="${user.name}"/>
	<property name="hibernate.connection.username" value="${user.name}"/>
	<target name="configure">

		<!-- Read defaults where possible:
			First read the values provided last time, then
			what can be gathered from the environment,
			then our standard defaults.
		-->
		<property file="${etc.dir}/local.properties"/>
		<property file="${etc.dir}/local.properties.example"/>

		<skip prop="omero.user"/>
                <input addproperty="config_omero.user" defaultValue="${omero.user}">
		${msg.setup.omero.user}
		</input>

<!-- Have to find a workaround for password entry.
     See http://issues.apache.org/bugzilla/show_bug.cgi?id=33354 
     One solution http://homepage.ntlworld.com/wayne_grant/ant.html
                <input 
			message="Please enter password:" 
			addproperty="config.pass" />

		<fail message="Password cannot be empty">
			<condition><not>
			<length 
				string="${config.pass}" 
				trim="true"
				when="greater" 
				length="0"/>
			</not></condition>
		</fail>

                <input 
			message="Please re-enter password" 
			addproperty="config.test" />

		<fail message="Password did not match">
			<condition><not>
				<equals arg1="${config.pass}" arg2="${config.test}"/>
			</not></condition>
		</fail>
-->

		<skip prop="server.host"/>
                <input addproperty="config_server.host" defaultvalue="${server.host}">
		${msg.setup.server.host}
		</input>

		<property name="config_server.port" value="${server.port}"/>
<!-- Skipping for now. No one knows what 1099 is anyway.
		<skip prop="server.port"/>
                <input 
			message="Please enter server port [${server.port}]" 
			addproperty="config_server.port"
			defaultvalue="${server.port}"/>
-->
		<skip prop="database.host"/>
                <input addproperty="config_database.host" defaultvalue="${database.host}">
		${msg.setup.database.host}
		</input>

		<skip prop="database.name"/>
                <input addproperty="config_database.name" defaultvalue="${database.name}">
		${msg.setup.database.name}
		</input>

		<skip prop="hibernate.connection.username"/>
                <input addproperty="config_hibernate.connection.username" defaultvalue="${hibernate.connection.username}">
		${msg.setup.hibernate.connection.username}
		</input>

<!-- See comment above on password entry
                <input 
			message="Please enter database password:" 
			addproperty="config.dbpass" />

		<fail message="Password cannot be empty">
			<condition><not>
			<length 
				string="${config.dbpass}" 
				trim="true"
				when="greater" 
				length="0"/>
			</not></condition>
		</fail>

                <input 
			message="Please re-enter database password" 
			addproperty="config.dbtest" />

		<fail message="Password did not match">
			<condition><not>
				<equals arg1="${config.dbpass}" arg2="${config.dbtest}"/>
			</not></condition>
		</fail>
-->

		<skip prop="database.profile"/>
		<input validargs="psql,mysql" addproperty="config_database.profile" defaultValue="psql">
		${msg.setup.database.profile} </input>

		<tstamp prefix="config"/>

		<echo file="${etc.dir}/local.properties">
#
# This file was generated by the configure task at ${config.DSTAMP} ${config.TSTAMP}
#
server.host=${config_server.host}
server.port=${config_server.port}
omero.user=${config_omero.user}
omero.pass=CHANGE_ME
omero.rootpass=${omero.rootpass}
omero.db.profile=${config_database.profile}
hibernate.connection.username=${config_hibernate.connection.username}
hibernate.connection.password=CHANGE_ME
database.host=${config_database.host}
database.name=${config_database.name}
javac.source=${javac.source}
javac.target=${javac.target}
javac.debug=${javac.debug}
javac.debuglevel=${javac.debuglevel}
</echo>

		<input>
		${msg.setup.passwords}
		</input>

		<antcall target="load-profile" inheritAll="false">
			<param name="etc.dir" value="${etc.dir}"/>
			<param name="config_database.profile" value="${config_database.profile}"/>
		</antcall>
	
	</target>

	<target name="load-profile">
	
		<property file="${etc.dir}/local.properties"/>

		<loadfile property="profile" srcFile="${etc.dir}/profiles/${config_database.profile}">
			<filterchain>
				<expandproperties/>
			</filterchain>
		</loadfile>

		<echo append="true" file="${etc.dir}/local.properties">${profile}</echo>

	</target>

	<!-- 	===============================================
		CHECK SYSTEM 
	==================================================  -->
	<target name="check-system"
		depends="check-java5,check-appserver,check-database"
		description="Verifies that system is ready to build"/>

	<target name="check-java5" unless="checks.skip">
		<fail message="Omero requires Java5">
			<condition><not>
			<equals arg1="${ant.java.version}" arg2="1.5"/>
			</not></condition>
		</fail>
	</target>

	<target name="check-appserver" unless="checks.skip">
		<fail message="No application server found">
			<condition><not>
			<isset property="env.JBOSS_HOME"/>
			</not></condition>
		</fail>
	</target>
	
	<target name="check-database"  unless="checks.skip">
                <iterate buildpathref="server.buildpath" target="check-db"/>
	</target>

</project>
