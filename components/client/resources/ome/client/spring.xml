<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# Copyright (C) 2005 Open Microscopy Environment
#       Massachusetts Institue of Technology,
#       National Institutes of Health,
#       University of Dundee
#
#
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation; either
#    version 2.1 of the License, or (at your option) any later version.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--

	Configuration of client proxies.
 
-->

	<beans>	
	<!-- ***** CONFIG ***** -->
	<!-- property placeholder post-processor -->
	<bean id="placeholderConfig"
              class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
    <property name="ignoreResourceNotFound" value="true"/>
		<property name="locations">
		<list>
			<value>classpath:omero.properties</value>
 			<value>classpath:jndi.properties</value>
		</list>
		</property>
	</bean>
	
	<bean id="principal" class="ome.system.Principal">
		<constructor-arg index="0" value="${omero.user}"/>
		<constructor-arg index="1" value="${omero.group}"/>    
		<constructor-arg index="2" value="${omero.event}"/>        
	</bean>

  <bean id="env" class="java.util.Hashtable">
    <constructor-arg>
      <map>
        <entry key="java.naming.security.principal" value-ref="principal"/>
        <entry key="java.naming.security.credentials" value="${omero.pass}"/>
        <entry key="java.naming.factory.initial" value="${java.naming.factory.initial}"/>
        <entry key="java.naming.factory.url.pkgs" value="${java.naming.factory.url.pkgs}"/>
        <entry key="java.naming.provider.url" value="${java.naming.provider.url}"/>
      </map>
    </constructor-arg>
  </bean>
    
  <bean id="jndi" abstract="true"
    class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiEnvironment" ref="env"/>
  </bean>
		
  <bean id="analysisService" parent="jndi">
    <property name="jndiName" value="omero/remote/ome.api.IAnalysis"/>
    <property name="proxyInterface" value="ome.api.IAnalysis"/>
    <property name="lookupOnStartup" value="false"/>
  </bean>

  <bean id="pixelsService" parent="jndi">
    <property name="jndiName" value="omero/remote/ome.api.IPixels"/>
    <property name="proxyInterface" value="ome.api.IPixels"/>
    <property name="lookupOnStartup" value="false"/>
  </bean>

  <bean id="pojosService" parent="jndi">
    <property name="jndiName" value="omero/remote/ome.api.IPojos"/>
    <property name="proxyInterface" value="ome.api.IPojos"/>
    <property name="lookupOnStartup" value="false"/>
  </bean>

  <bean id="renderService" parent="jndi">
    <property name="jndiName" value="omero/remote/omeis.providers.re.RenderingEngine"/>
    <property name="proxyInterface" value="omeis.providers.re.RenderingEngine"/>
    <property name="lookupOnStartup" value="false"/>
    <property name="cache" value="false"/>
  </bean>

  <bean id="queryService" parent="jndi">
    <property name="jndiName" value="omero/remote/ome.api.IQuery"/>
    <property name="proxyInterface" value="ome.api.IQuery"/>
    <property name="lookupOnStartup" value="false"/>
  </bean>

  <bean id="updateService" parent="jndi">
    <property name="jndiName" value="omero/remote/ome.api.IUpdate"/>
    <property name="proxyInterface" value="ome.api.IUpdate"/>
    <property name="lookupOnStartup" value="false"/>
  </bean>
        
</beans>
