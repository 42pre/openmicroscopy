<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" 
  "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# Copyright (C) 2005 Open Microscopy Environment
#       Massachusetts Institue of Technology,
#       National Institutes of Health,
#       University of Dundee
#
#
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation; either
#    version 2.1 of the License, or (at your option) any later version.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
<beans>

  <bean    id="ome.client"
    	  class="ome.system.OmeroContext"
    lazy-init="true">
    <description>
    Client OmeroContext. This context can be created by calling 
    OmeroContext.getClientContext() or OmeroContext.getInstance("ome.client")
    methods. See ome/client/spring.xml for more information about what 
    is available in this context.
  
    Relies to a java.util.Properties instance specified
    either in the "ome.client.internal" context or provided by the user via
    ServiceFactory(Server,Login). In order to achieve this, this context is NOT
    eagerly loaded (see ctor-arg index=1 below) unlike all other contexts in our
    beanRefContext.xml files. For this to work, OmeroContext checks all contexts
    for readiness and if not ready, calls "refresh()".

    @see https://trac.openmicroscopy.org.uk/omero/ticket/313
    </description>
    <constructor-arg>
    	<list>
        <value>ome/client/spring.xml</value>
      </list>
    </constructor-arg>      
    <constructor-arg index="1" value="false"/>
    <constructor-arg index="2" ref="ome.client.internal"/>      
  </bean>

  <bean    id="ome.client.internal"
    	  class="ome.system.OmeroContext"
    lazy-init="true">
    <constructor-arg>
    	<list>
        <value>ome/client/internal.xml</value>
      </list>
    </constructor-arg>
  </bean>

  <bean    id="ome.client.test"
    	  class="ome.system.OmeroContext"
    lazy-init="true">
    <constructor-arg>
    	<list>
        <value>ome/client/spring.xml</value>
        <value>ome/testing/data.xml</value>        
      </list>
    </constructor-arg>
    <constructor-arg index="1" value="true"/>
    <constructor-arg index="2" ref="ome.client.internal"/>      
  </bean>  
    
 </beans>
