/*
 *   $Id$
 * 
 *   Copyright 2006 University of Dundee. All rights reserved.
 *   Use is subject to license terms supplied in LICENSE.txt
 *
 */
#set( $pkg    = $pojo.packageDeclaration)
#set( $pkgNew = $pkg.replaceFirst("package","").replaceAll(";","").replaceAll(" ","").replaceAll("[.]","_") )
#set( $pkgdash = "${pkgNew}_" )
#set( $moduleStart = $pkgdash.replaceAll('(.*?)_','module $1 { '))
#set( $moduleStop  = $pkgdash.replaceAll('(.*?)_','};'))

#set( $def = $pkgdash.replaceAll(" ","_").replaceAll(";",""))	
#set( $def = "${def}_${pojo.declarationName}")
#ifndef $def
#define $def
#set( $include = '\#include' )

$include <ome.ice>
##foreach($c in $c2j.getPOJOIterator( $cfg.getClassMappings() ))
##set( $i = $c.packageDeclaration.replaceFirst("package","").replaceAll(";","").replaceAll(" ","") )
##if(! $i.contains("core") )
##$include <$i.replaceAll("[.]","/")/${c.declarationName}.ice>
##end
##end
#set( $importModify = '.replaceAll("import ","$include <").replaceAll("[.]","/").replaceAll(";",".ice>").replaceAll(".*java.*","") ' )
$secondpassclassimports$importModify


$moduleStart
#foreach($property in $pojo.allPropertiesIterator)
#set( $fulltype = $c2j.getJavaTypeName($property,false) ) ## , $generics)
#set( $type = $c2j.unqualify($fulltype) )
#set( $field = $property.name )
#set( $value = $property.value )
#set( $seqName = "${pojo.declarationName}Remote${field}Seq;" )
#if( $fulltype.contains("java.util.Set")||$fulltype.contains("java.util.List")) 
#set( $genericType = $c2j.getJavaTypeName($property,true).replaceFirst(".*<","").replaceFirst(">.*",""))
#set( $genericTypeC = "${genericType.replaceAll('[.]','::')}Remote")
["java:type:java.util.ArrayList"] sequence<$genericTypeC> $seqName
#elseif($fulltype.contains("byte[]"))
sequence<byte> $seqName
#end
#end



class ${pojo.declarationName}Remote
{
#foreach($property in $pojo.allPropertiesIterator)
#set( $fulltype = $c2j.getJavaTypeName($property,false) ) ## , $generics)
#set( $type = $c2j.unqualify($fulltype) )
#set( $field = $property.name )
#set( $value = $property.value )

	//  $fulltype $property.name;
##
#if( $type == "String")
	string $field;
#elseif( $type == "Boolean" )
	bool $field;
#elseif ( $type == "Double" )
	double $field;
#elseif ( $type == "Float" )
	float $field;
#elseif( $type == "Integer")
	int $field;
#elseif ( $type == "Long" )
	long $field;
#elseif ($type.endsWith("Map") )
	dictionary $field;
#elseif( $fulltype.contains("java.util.List") || $fulltype.contains("java.util.Set") || $fulltype.contains("[]")) 
	${pojo.declarationName}Remote${field}Seq $field;
#elseif ($fulltype.startsWith("ome") )
	${fulltype.replaceAll("[.]","::")}Remote $field;

#else
	ERROR ===========> Unknown type.
#end
##
#end
};
$moduleStop
#endif 
